#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the User's Guide prints
% out as advertised. If you mess with this preamble,
% parts of the User's Guide may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

%\usepackage[utf8]{inputenc}

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used

 % set fonts for nicer pdf view
 \IfFileExists{lmodern.sty}{\usepackage{lmodern}}{}

\fi % end if pdflatex is used

% for correct jump positions whe clicking on a link to a float
\usepackage[figure]{hypcap}
%\usepackage[printonlyused]{acronym-custom}
\usepackage{acronym-custom}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
}

% redefine the \LyX macro for PDF bookmarks
\def\LyX{\texorpdfstring{%
  L\kern-.1667em\lower.25em\hbox{Y}\kern-.125emX\@}
  {LyX}}

% define a short command for \textvisiblespace
\newcommand{\spce}{\textvisiblespace}

% macro for italic page numbers in the index
\newcommand{\IndexDef}[1]{\textit{#1}}

% redefine the greyed out note
%\renewenvironment{lyxgreyedout}
 %{\textcolor{blue}\bgroup}{\egroup}

% workaround for a makeindex bug, 
% see sec. "Index Entry Order"
% only uncomment this when you are using makindex
%\let\OrgIndex\index 
%\renewcommand*{\index}[1]{\OrgIndex{#1}}

\usepackage{listings}
\renewcommand{\lstlistlistingname}{Listings}
\renewcommand{\lstlistingname}{Listing}

\usepackage{hyphenat}
\usepackage{verbatim}

%indentation, including first paragraph
\setlength{\parindent}{1.5em}
\usepackage{indentfirst}

\AtBeginDocument{
   \renewcommand{\tablename}{Table}
   \renewcommand{\listtablename}{List of tables}
}

\newenvironment{changemargin}[2]{%
  \begin{list}{}{%
    \setlength{\topsep}{0pt}%
    \setlength{\leftmargin}{#1}%
    \setlength{\rightmargin}{#2}%
    \setlength{\listparindent}{\parindent}%
    \setlength{\itemindent}{\parindent}%
    \setlength{\parsep}{\parskip}%
  }%
  \item[]}{\end{list}}

\newenvironment{note}{
  \begin{changemargin}{2em}{2em}
    \textbf{\textsc{Note: }}
}{
  \end{changemargin}
}
%to use epigraphs
\usepackage{epigraph}
%captions control
\setlength{\abovecaptionskip}{10pt plus 5pt minus 5pt}
\setlength{\belowcaptionskip}{10pt plus 5pt minus 5pt}
%colours
\definecolor{gray}{RGB}{50, 50, 50}
\definecolor{lightgray}{RGB}{102, 102, 102}
%for the long lines of code (mostly URLs)
%\usepackage{seqsplit}
%for getting more padding between rows in tables
%\setlength{\tabcolsep}{15pt}
\renewcommand{\arraystretch}{1.5}
\end_preamble
\options intoc,bibtotoc,idxtotoc,BCOR0mm,tablecaptionabove
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\begin_local_layout

\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter txtt
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_title "DPMbox"
\pdf_author "Juan Valencia Calvellido"
\pdf_subject "DPMbox"
\pdf_keywords "DPMbox CERN DPM"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,pdfpagelayout=OneColumn, pdfnewwindow=true,pdfstartview=XYZ, plainpages=false, pdfpagelabels,pdftex"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch Pregunta
\selected 1
\filename_suffix 0
\color #00ff00
\end_branch
\branch Respuesta
\selected 0
\filename_suffix 0
\color #aa55ff
\end_branch
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 3.5cm
\rightmargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\listings_params "basicstyle={\ttfamily},captionpos=b,language=C,keywordstyle={\color{blue}},commentstyle={\color{lightgray}\itshape},emphstyle={\color{gray}},breaklines=true,basicstyle={\ttfamily},stringstyle={\color{gray}},identifierstyle={\color{gray}}"
\bullet 1 0 10 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
****************************************************
\end_layout

\begin_layout Plain Layout
Plantilla: plantillaLyX-PFC-ITIG-ITIS-II-UCA.lyx
\end_layout

\begin_layout Plain Layout
Autor: Juan Boubeta Puig <juan.boubeta@uca.es>
\end_layout

\begin_layout Plain Layout
Fecha: 27 de julio de 2012 (versión 1)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

30 de enero de 2014 (versión 2)
\end_layout

\begin_layout Plain Layout
****************************************************
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\begin_layout Plain Layout

  
\backslash
centering
\end_layout

\begin_layout Plain Layout

  
\backslash
includegraphics[width=.25
\backslash
textwidth]{logo_uca}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{changemargin}{3em}{3em}
\end_layout

\begin_layout Plain Layout

    
\backslash
centering
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    {
\backslash
LARGE 
\backslash
textsc{
\backslash
nohyphens{Escuela Superior de Ingeniería}}}
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    {
\backslash
LARGE 
\backslash
nohyphens{Grado en Ingeniería Informática}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
includegraphics[width=.25
\backslash
textwidth]{DPMbox}
\end_layout

\begin_layout Plain Layout

	
\backslash
vspace{-8px}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   {
\backslash
LARGE 
\backslash
nohyphens{An interactive user-friendly web interface for a disk-based grid
 storage system}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

    
\backslash
end{changemargin}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    {
\backslash
LARGE Juan Valencia Calvellido 
\backslash

\backslash
}
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip 
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip 
\end_layout

\begin_layout Plain Layout

    {
\backslash
LARGE Cádiz, September 2015}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\begin_layout Plain Layout


\backslash
newpage{
\backslash
pagestyle{empty}
\backslash
cleardoublepage}  
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

  
\backslash
thispagestyle{empty} 
\end_layout

\begin_layout Plain Layout

  
\backslash
centering
\end_layout

\begin_layout Plain Layout

  
\backslash
includegraphics[width=.2
\backslash
textwidth]{logo_uca}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{changemargin}{3em}{3em}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

      {
\backslash
LARGE 
\backslash
textsc{
\backslash
nohyphens{Escuela Superior de Ingeniería}}}
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

      {
\backslash
LARGE 
\backslash
nohyphens{Grado en Ingeniería Informática}}
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

      {
\backslash
LARGE 
\backslash
nohyphens{DPMbox: An interactive user-friendly web interface for a disk-based
 grid storage system }}
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

	  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	  {
\backslash
LARGE Academic year 2014-2015}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

	  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

      
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

    
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

  
\backslash
end{changemargin}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
begin{flushleft}
\end_layout

\begin_layout Plain Layout

    
\backslash
Large
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
textsc{Department}: 
\backslash
nohyphens{Ingeniería Informática} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

    
\backslash
textsc{Supervisor}: 
\backslash
nohyphens{Manuel Palomo Duarte} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

	
\backslash
textsc{Co-Supervisor}: 
\backslash
nohyphens{Alejandro Álvarez-Ayllón} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

    
\backslash
textsc{Author}: 
\backslash
nohyphens{Juan Valencia Calvellido} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  
\backslash
end{flushleft}
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{flushright}
\end_layout

\begin_layout Plain Layout

    
\backslash
large
\end_layout

\begin_layout Plain Layout

	Cádiz, September 2015
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip    
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

    Juan Valencia Calvellido
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

  
\backslash
end{flushright}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newpage{
\backslash
thispagestyle{empty}
\backslash
cleardoublepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
License
\end_layout

\begin_layout Standard
Copyright © 2015 Juan Valencia Calvellido.
\end_layout

\begin_layout Standard
Revision number: 1.0
\end_layout

\begin_layout Standard
Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.3 or any later
 version published by the Free Software Foundation; with no Invariant Sections,
 no Front-Cover Texts, and no Back-Cover Texts.
 A copy of the license is included in the section entitled GNU Free Documentatio
n License.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage{
\backslash
thispagestyle{empty}
\backslash
cleardoublepage}
\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Abstract
\end_layout

\begin_layout Standard
Disk Pool Manager (DPM) is a lightweight storage management system for grid
 sites.
 It has been developed in CERN (European Organization for Nuclear Research),
 and it is the most widely adopted solution in the Worldwide LHC Computing
 Grid infrastructure.
 
\end_layout

\begin_layout Standard
Attracting less technical users has been an objective for the last years,
 thus, as an effort to move towards standard protocols that removes the
 need of special tools, DPM started offering a WebDAV (an extension of the
 HTTP protocol) interface, facilitating the access through commonly available
 tools, i.e.
 web browsers or WebDAV clients.
 However, this interface only provides basic functionality, especially when
 accessed from a web browser, making it still necessary to use some specific
 tools.
 DPMbox is a project for a friendly web interface that allows both technical
 and nontechnical users to manage their data from and into the grid by accessing
 it trough their web browsers.
 
\end_layout

\begin_layout Standard
The project has been built getting advantage of the implemented WebDAV front-end
, and as a web development it uses standard and mature web technologies
 like HTML, CSS and JavaScript/ECMAScript as its core language.
 As a collaboration with CERN, the development has been focused on the functiona
lity required by the DPM, but one of the objectives is to make DPMbox easily
 expandable and flexible, enabling its use with other systems that offer
 the WebDAV protocol.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Disk Pool Manager (DPM) es un sistema de gestión de almacenamiento que se
 usa dentro del Worldwide LHC Computing Grid.
 Ha sido desarrollado en el CERN y actualmente es el más usado dentro de
 esta infraestructura de computación distribuida.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Avanzando hacia el uso de estándares que faciliten el uso de DPM, recientemente
 se implementó una interfaz WebDAV (una extensión del protocolo HTTP) para
 este sistema.
 A pesar de ello esta interfaz aún ofrece una funcionalidad básica, sobre
 todo accediendo desde un navegador web, lo que hace que siga siendo necesario
 usar algunas herramientas especiales.
 El objetivo de DPMbox es ofrecer una interfaz realmente amigable, intuitiva
 y que pueda usarse con herramientas ya conocidas por los usuarios, como
 es el caso de un navegador web, atrayendo así a usuarios menos técnicos
 de la comunidad científica.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
El proyecto basa su construcción en la interfaz WebDAV implementada y hace
 uso de tecnologías maduras y estándar que permiten este desarrollo como
 JavaScript/ECMAScript a través de jQuery u otras librerías de apoyo, así
 como HTML y CSS.
 Al realizarse como colaboración con el CERN el desarrollo se centra en
 las funcionalidades requeridas por el sistema DPM.
 Aún así, uno de los objetivos es que habiendo cumplido los requisitos iniciales
, el sistema sea extensible y facilmente adaptable, haciendo posible su
 uso con otros sistemas que ofrezcan el protocolo WebDAV de manera general.
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Tags
\end_layout

\begin_layout Standard
DPM Disk Pool Manager CERN LHC Grid WebDAV Interface JavaScript ECMAScript
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\begin_inset CommandInset label
LatexCommand label
name "chap:Introduction"

\end_inset


\end_layout

\begin_layout Standard
This work is the outcome of a one year long relationship between 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

, specifically with its IT-SDC-ID (Information Technology, Support for Distribut
ed Computing, Information and Data) section and me, as 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Grado en Ingeniería Informática
\end_layout

\end_inset

 (BSc Computer Science) student, to develop my 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{TFG}
\end_layout

\end_inset


\begin_inset space ~
\end_inset

in one of the projects that this department is working on.
 
\end_layout

\begin_layout Section
Motivation
\begin_inset CommandInset label
LatexCommand label
name "sec:Motivation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 is the largest laboratory for particle physics research in the world.
 It is located near Geneva, on the French-Swiss border.
 It was founded in 1954 and currently it has 20 member states and 2,500
 employees on its payroll, but in addition to its staff, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 host daily up to 10,000 people including temporary staff, students, universitie
s, etc.
 
\end_layout

\begin_layout Standard
In recent times it has become well known mostly due to the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 and the famous Higgs Boson
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Ellis_1458922"

\end_inset

.
 Moreover, there are other experiments being conducted by 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

, not only on physics discipline.
 For example, the World Wide Web (WWW) was created by Tim Berners-Lee in
 1990 while he was working there, and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 has played a major role in the development of the free software movement
 since then.
 They put the World Wide Web software in the public domain, and in the next
 release it was made available with an open license as a more sure way to
 maximize its dissemination
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "3_bizer_heath_berners-lee_2009"

\end_inset

.
\end_layout

\begin_layout Standard
It is structured in a hierarchical Department/Group/Section organization,
 being the departments these eight:
\end_layout

\begin_layout Description
PH Physics
\end_layout

\begin_layout Description
BE Beams
\end_layout

\begin_layout Description
TE Technology
\end_layout

\begin_layout Description
EN Engineering
\end_layout

\begin_layout Description
HR Human Resources
\end_layout

\begin_layout Description
FP Finance, Procurement and Knowledge Transfer 
\end_layout

\begin_layout Description
GS General Infrastructure Services
\end_layout

\begin_layout Description
IT Information Technology
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Depending on the time, more than 100 TB of data could be transferred per
 day on the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

 by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 experiments
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-331-7-072001"

\end_inset

.
 All this data has to be stored to be lately processed and analyzed by different
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 partners who need to access them from different parts of the world.
 And here is where Grid Computing comes on the scene.
 The idea behind this concept is to have a grid as the electricity grid.
 No matter where the electricity comes from, what really matters is that
 it is available when you get connected to the net.
 This distribution is structured in tiers with Tier-0 (data recording and
 data distribution), Tier-1 (permanent storage and analysis) and Tier-2
 (simulation and end-user analysis).
 This can be seen on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cern_tiers"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:cern_tiers"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/CERNtiers.png
	width 63text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CERN Tier distribution
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

 is a global computing infrastructure whose mission is to provide computing
 resources to store, distribute and analyze the data generated by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 seeking to be available equally to all members, regardless of their location.
 A worldwide collaboration between different experiments of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 (ALICE, ATLAS, CMS and LHCb, an scheme of them can be checked on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cernexperiments"

\end_inset

) and participating computing centers manage and organize their resources,
 all coordinated by CERN
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_wlcg.web.cern.ch_2015"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:cernexperiments"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/accelerator.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CERN experiments
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{SE}
\end_layout

\end_inset

 provides uniform access to data storage resources.
 They can support different data access protocols and interfaces, a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{SE}
\end_layout

\end_inset

 may control simple disk servers, large disk arrays or tape-based 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{MSS}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{SRM}
\end_layout

\end_inset

 is a middleware component whose function is to provide dynamic space allocation
 and file management on shared storage components on the grid.
 More precisely, the SRM is a grid service with several different implementation
s and varying capabilities
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "SRM_2013_6829"

\end_inset

.
\end_layout

\begin_layout Standard
The storage components used in the grid belong to the category of software
 systems whose goal is to cluster storage resources and make them available
 to data processing clients as an unique logical system.
 These products collaborate by managing and distributing data across mount
 points that are spread through many servers.
 Clients that want to access the repository are redirected to the most suitable
 server according to various criteria, typically given by some clustering
 algorithm.
 There are different clustering techniques using various technologies and
 the goal of such systems is always to hide to the users the complexity
 linked to the “where is my file problem”.
 The central systems that schedule analysis jobs to be submitted, or the
 users themselves do not need to deal with details that are internal to
 the site (e.g.
 the names of the mount points, which can change); they need to interact
 with a coherent storage service that is offered and administered by the
 site
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-513-3-032034"

\end_inset

.
\end_layout

\begin_layout Standard
Some of the different solutions employed in the WLCG are:
\end_layout

\begin_layout Itemize
BestMAN: Disk or 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{MSS}
\end_layout

\end_inset

 based storage server.
 
\end_layout

\begin_layout Itemize
CASTOR: Tape storage with disk buffer and large-scale 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{MSS}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
dCache: An access point, multiple nodes.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{MSS}
\end_layout

\end_inset

 and large-scale disk array storage systems
\end_layout

\begin_layout Itemize
EOS: Follows the idea of a model transition from a hierarchical storage
 system to a tier model.
\end_layout

\begin_layout Itemize
StoRM: Takes advantage of the underlying file-systems to implement the features
 offered by the SRM interface.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

: Disk-based, maximum 10TB per node.
 
\end_layout

\begin_layout Subsection
Disk Pool Manager
\end_layout

\begin_layout Standard
After this small presentation about 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

, we are in position to talk about the Disk Pool Manager
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "6_svnweb.cern.ch_2015"

\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 is a lightweight storage solution for grid sites, focusing on disk-based
 systems.
 It offers a simple way to create an storage node on the network and offers
 compatibility with relevant protocols (SRM, gridFTP, RFIO), for both file
 management and access.
 It is focused on smaller sites (including simple installation and configuration
 as well as easy maintenance), but also provides all the needed functionality
 for a storage system on network/grid (support for multiple server nodes,
 different namespaces or multiple replicas in disk pools)
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "2_manzi_2015"

\end_inset

.
 It is currently installed in 165 different sites, with more than 190 instances
 running as of September 2015, you can check this in figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:currentusage"

\end_inset

 and in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "WLCG_stats"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:currentusage"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/DPMuse.png
	width 67text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPM current usage screenshot
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Some of the most important supported features are: 
\end_layout

\begin_layout Itemize
Provide HTTP multi-stream transfers for high performance wide area networks.
\end_layout

\begin_layout Itemize
Support for third party copies.
 
\end_layout

\begin_layout Itemize
Support for X.509 authentication with proxy certificates and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

 extensions 
\end_layout

\begin_layout Itemize
Support for user credential delegations.
 
\end_layout

\begin_layout Itemize
Support for modern configuration and monitoring solutions based on the industry
 standards Puppet and Nagios.
\end_layout

\begin_layout Subsection
Current goals
\end_layout

\begin_layout Standard
The WLCG data transfer services have been one of the keys to the success
 of the management of the huge volumes of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 data, and bringing those services and underlying infrastructure up to scale
 was the subject of many of the large scale data challenges prior to the
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 switch on.
 In recent years, the overall goal has been to leverage standards and commonly
 accepted practices, and use them to contribute the components that are
 needed to fulfill the complex problem of data access in High Energy Physics
 while using technologies and toolsets that are attractive also for non-
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{HEP}
\end_layout

\end_inset

 communities, making long term sustainability a closer goal
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-396-3-032015"

\end_inset

.
 
\end_layout

\begin_layout Standard
This is happening because, so far, all the bulk data movement has relied
 on the gridFTP protocol.
 While it has been proven successful, this protocol relies on dedicated
 software that must be maintained by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{HEP}
\end_layout

\end_inset

 grid community.
 This was needed in the first years, but nowadays, in the Big Data era,
 there are many examples of large scale data movement using more common
 protocols such as HTTP.
 This change includes the advantage that there are many known solutions
 to store and manage data using HTTP (including web caches, redirection
 for load balancing or fail-over, etc.), that would not need dedicated (or
 standalone) support from the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{HEP}
\end_layout

\end_inset

 community
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-396-3-032042"

\end_inset

.
\end_layout

\begin_layout Standard
One of the IT-SDC-ID section contributions to the usage of HTTP in High
 Energy Physics has been the evolution of the Disk Pool Manager (DPM) architectu
re towards a scalable and flexible framework for designing data management
 systems, called dmlite.
 There has been work invested in implementing HTTP as an alternative to
 gridFTP.
 Therefore, a few years ago, moving towards the adoption of standards to
 facilitate its use and trying to eliminate the need for special tools,
 a WebDAV interface (an extension of the HTTP protocol) was implemented
 in Disk Pool Manager
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-396-5-052006"

\end_inset

.
 The main goal was to facilitate the access to the storage network through
 common programs, i.e.
 web browsers or WebDAV clients.
 
\end_layout

\begin_layout Standard
However, this implementation is based on a primitive read-only interface
 when accessed through a web browser, which limits the use cases to simple
 directory browsing and file downloads.
 This makes still necessary to use specific tools for certain operations
 such as file uploads.
 
\end_layout

\begin_layout Section
Objectives and scope
\begin_inset CommandInset label
LatexCommand label
name "sec:Objectives-and-scope"

\end_inset


\end_layout

\begin_layout Standard
Taking advantage of this WebDAV interface, the general goal of the DPMbox
 project is to offer a truly friendly interface that concentrates all possible
 functionality in one tool that can be used with programs known by users,
 namely web browsers.
 The purpose is not to create a cloud storage system copycat, but to get
 advantage of the features that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 system already offers (performance, different accessing protocols, data
 replication, etc.) adding the ease of use of the increasingly widespread
 cloud storage systems like Dropbox, OneDrive or Google Drive.
\end_layout

\begin_layout Standard
More specifically the system must allow users to manage their data stored
 in DPM grid elements in a manner that is straight forward for unexperienced
 users.
 The focus will be held mainly on usability and ease of use, according to
 navigation standards found on file browsers and cloud storage systems,
 but other requirements must also be taken into consideration, including,
 obviously, security constraints.
 
\end_layout

\begin_layout Standard
The development will focus on the functionality required by the IT-SDC-ID
 section, pursuing effectiveness on the DPM infrastructure.
 But one of the future goals is that, after fulfilling these requirements,
 DPMbox will be easy to adapt to another contexts, enabling its general
 use with any other system implementing a WebDAV protocol.
\end_layout

\begin_layout Standard
As a web development the project will use standard web technologies as HTML5
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "2_w3.org_2015"

\end_inset

, CSS3
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "3_w3.org_2015"

\end_inset

 or JavaScript
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "4_mozilla_developer_network_2015"

\end_inset

 and like all software involved in DPM, the project is developed under the
 Apache License version 2.0
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "5_apache.org_2015"

\end_inset

.
\end_layout

\begin_layout Section
Glossary
\end_layout

\begin_layout Subsection
Acronyms
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{acronym}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{AC}{Attribute Cetificate}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{ACL}{Access Control Lists}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{CERN}{European Organization for Nuclear Research}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{CORS}{Cross-Origin Resource Sharing}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{DAV}{Distributed Authoring and Versioning}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{DN}{Distinguished Name}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{DOM}{Document Object Model}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{DPM}{Disk Pool Manager}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{EGI}{European Grid Infrastructure}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{FQAN}{Fully Qualified Attribute Name}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{HEP}{High Energy Physics}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{LFC}{LCG File Catalog}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{LFN}{Logical File Name}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{LHC}{Large Hadron Collider}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{MSS}{Mass Storage System}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{PFN}{Physical File Name}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{PMI}{Privilege Management Infrastructure}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{RFIO}{Remote File Input Output}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{SE}{Storage Element}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{SFN}{Storage File Name}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{SRM}{Storage Resource Manager}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{TFG}{
\backslash
emph{Trabajo Fin de Grado} - Degree Thesis}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{UCA}{
\backslash
emph{Universidad de Cádiz}}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{UX}{User eXperience}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{VOMS}{Virtual Organization Membership Service}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{WLCG}{Worldwide LHC Computing Grid}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{XHR}{XMLHttpRequest}
\end_layout

\begin_layout Plain Layout

  
\backslash
acro{XML}{eXtended Markup Language}
\end_layout

\begin_layout Plain Layout


\backslash
end{acronym}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definitions
\end_layout

\begin_layout Description
Collection A collection is defined as a resource whose state consists of
 at least a list of internal member URIs and a set of properties, but which
 may have additional state such as entity bodies returned by GET.
 In this work you can almost consider as a synonym to a directory.
 Complete and formal definition can be found on section 5.2 of RFC 4918
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "RFC4918"

\end_inset

.
\end_layout

\begin_layout Description
Metalink Metalink is an extensible metadata file format that describes one
 or more computer files available for download.
 It specifies files appropriate for the user's language and operating system,
 facilitates file verification and recovery from data corruption, and lists
 alternate download sources (mirror URIs)
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "RFC5854,RFC6249"

\end_inset

.
\end_layout

\begin_layout Description
POSIX Acronym for Portable Operating System Interface, a family of standards
 specified by the IEEE Computer Society for maintaining compatibility between
 operating systems.
 POSIX defines the application programming interface (API), along with command
 line shells and utility interfaces, for software compatibility with variants
 of Unix and other operating systems.
\end_layout

\begin_layout Description
Proxy
\begin_inset space ~
\end_inset

Certificate The term Proxy Certificate is used to describe a certificate
 that is derived from, and signed by, a normal X.509 Public Key End Entity
 Certificate or by another Proxy Certificate for the purpose of providing
 restricted proxying and delegation within a PKI (Public Key Infrastructure)
 based authentication system
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "rfc3820"

\end_inset

.
\end_layout

\begin_layout Description
X.509 An ITU-T (Telecommunication Standardization Sector) standard for a
 PKI (Public Key Infrastructure) and PMI (Privilege Management Infrastructure).
 X.509 specifies, amongst other things, standard formats for public key certifica
tes, certificate revocation lists, attribute certificates, and a certification
 path validation algorithm
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "rfc3820"

\end_inset

.
\end_layout

\begin_layout Section
Document organization
\begin_inset CommandInset label
LatexCommand label
name "sec:Document-organization"

\end_inset


\end_layout

\begin_layout Standard
In this 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Introduction
\end_layout

\end_inset

 you can read about the project motivation and some descriptions about how
 the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 works, giving some context to the project.
 This is naturally followed by the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
State of the Art
\end_layout

\end_inset

, so the reader can completely envision the current system and environment
 state.
 
\end_layout

\begin_layout Standard
After that comes the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Schedule
\end_layout

\end_inset

, all the organization and planning issues can be found there.
 
\end_layout

\begin_layout Standard
Then, in the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Project general description
\end_layout

\end_inset

 a summary of the project is available, before getting into detail in the
 next section, 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Project development
\end_layout

\end_inset

, where all things about how DPMbox has been built are shown: system analysis,
 design, implementation and testing.
\end_layout

\begin_layout Standard
Next come 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Conclusions
\end_layout

\end_inset

 and 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Acknowledgements
\end_layout

\end_inset

, where we explain the final thoughts that have been reached after completing
 the development.
\end_layout

\begin_layout Standard
Finally, an appendix is presented, where different manuals can be found
 (
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Installation
\end_layout

\end_inset

, 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Development
\end_layout

\end_inset

 and 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
User
\end_layout

\end_inset

), and also the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
License
\end_layout

\end_inset

 under which this document is published.
\end_layout

\begin_layout Chapter
State of the art
\begin_inset CommandInset label
LatexCommand label
name "chap:State-of-the"

\end_inset


\end_layout

\begin_layout Standard
As previously commented, at the moment 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 already has web access implemented in the Disk Pool Manager infrastructure.
 This has been developed as part of the HTTP/WebDAV front-end and is built
 getting advantage of the Apache WebDAV module, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mod_dav
\end_layout

\end_inset

, and the proxy support module, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mod_gridsite
\end_layout

\end_inset

.
 To get a deeper understanding of how it works a paper from his authors,
 Álvarez Ayllón et al., can be checked
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-396-5-052006"

\end_inset

.
\end_layout

\begin_layout Standard
The Hypertext Transfer Protocol (HTTP)
\begin_inset script superscript

\begin_layout Plain Layout

\end_layout

\end_inset

is a well known and widely implemented standard protocol based on a client-serve
r stateless model.
 It can be used as a data transfer protocol, where users request a resource
 to a specific server, which then sends the response back.
 
\end_layout

\begin_layout Standard
Web Distributed Authoring and Versioning (WebDAV) is an extension to the
 HTTP protocol that provides namespaces and metadata handling through the
 web.
 
\end_layout

\begin_layout Description
Namespace Users can create, rename, modify and remove elements trough the
 web.
\end_layout

\begin_layout Description
Metadata Users can create and retrieve resources, and also modify its associated
 properties, as owner, description, permissions and any other information
 that can be expressed as text or 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XML}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
For this goal it defines some new additional methods to the traditional
 ones (POST, GET, PUT) like PROPFIND, MKCOL… 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XML}
\end_layout

\end_inset

 is the language used to encode the answers, as the list of properties of
 a file, or the content of a folder.
 Complete specification can be read in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "RFC4918,RFC5689"

\end_inset

.
 
\end_layout

\begin_layout Standard
In the current web visualization you can explore a collection, download
 the data and navigate through a collection.
 But it is not possible to upload data, there is no interaction.
 A reason for this is that HTML forms don’t support more HTTP verbs/methods
 than just GET and POST, and no PUT.
 So until now for this cases the use of CURL or a proper WebDAV client is
 needed.
 The current view accessing a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 server through a web browser is depicted in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:webdavaccess"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:webdavaccess"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/DPM_currentaccess_1.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
WebDAV access view
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
DPM and LFC
\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LFC}
\end_layout

\end_inset

 are two grid components with more than 240 endpoints available.
 
\end_layout

\begin_layout Standard
The purpose of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LFC}
\end_layout

\end_inset

 is to allow the access and retrieval of any file using just its 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LFN}
\end_layout

\end_inset

, without the need of knowing where exactly it is replicated.
 When a user does a request to an 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LFC}
\end_layout

\end_inset

, it will return a list of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{SFN}
\end_layout

\end_inset

 where this file can be retrieved.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

is a lightweight storage system mostly targeted at Tier-2 and medium size
 sites, providing reliable and scalable storage while keeping configuration
 and management simple.
 It maps a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{SFN}
\end_layout

\end_inset

 to a Transfer URL (TURL), which is the association between a Physical File
 Name (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{PFN}
\end_layout

\end_inset

) and an access protocol such as 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{RFIO}
\end_layout

\end_inset

, HTTP or gridFTP.
\end_layout

\begin_layout Section
Access
\end_layout

\begin_layout Standard
Currently, when a user wants to retrieve a file, a catalog must be queried
 for different replicas of that file.
 Then, the client will be redirected to the site hosting that replica, and
 finally to its actual physical location within that site.
 Generally this is done automatically, but specific tools are needed.
 
\end_layout

\begin_layout Standard
HTTP supports this kind of behavior as the response of a request can be
 a redirection to a different location than the one originally demanded.
 The functionality is the same, but as it is an extremely wide implemented
 standard, data could be accessed from almost any kind of platform, from
 servers to mobile devices.
 
\end_layout

\begin_layout Standard
WebDAV give in addition, metadata handling.
 It is also a popular protocol, with clients available for a wide variety
 of operating systems.
 
\end_layout

\begin_layout Standard
With support to these standards users are allowed to access their data easily
 and transparently, from any machine, through any platform, and using clients
 they already know how to use, for instance, web browsers.
 
\end_layout

\begin_layout Subsection
HTTP clients
\end_layout

\begin_layout Standard
A 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DAV}
\end_layout

\end_inset

 server can be accessed safely using plain HTTP, which allows using regular
 web browsers (Mozilla Firefox, Google Chrome, Opera...) to explore a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DAV}
\end_layout

\end_inset

 endpoint an retrieve files.
 However, web browsers don’t usually allow uploading files directly - without
 using a web form - so for that purpose CURL can be used.
 CURL is a command line interface able to interact with several protocols,
 being HTTP one of them.
 We compare the support of some key features of two of the most frequent
 tools used to access a web server in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:http_clients"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:http_clients"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="8">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Client
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
OS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
GUI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
CLI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
X.509
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
X.509 proxies
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Redirections
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
PUT
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CURL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web browser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Any
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Only IE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Description
OS Operating System 
\end_layout

\begin_layout Description
GUI Graphical User Interface 
\end_layout

\begin_layout Description
CLI Command Line Interface
\end_layout

\begin_layout Description
X.509 Support for client certificates
\end_layout

\begin_layout Description
X.509
\begin_inset space ~
\end_inset

proxies Support for proxy certificates 
\end_layout

\begin_layout Description
Redirections Follows redirections when needed
\end_layout

\begin_layout Description
PUT Writing support 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
HTTP clients
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
WebDAV clients
\end_layout

\begin_layout Standard
To perform namespace operations, such as creating directories, renaming
 or fetching properties, WebDAV must be used.
 We present a comparison between the most popular WebDAV clients on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:webdav_clients"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:webdav_clients"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Client
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
OS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
GUI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
CLI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
X.509
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
X.509 Proxies
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Redirections
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cadaver
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*nix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Davlib
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OS X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shared folder
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Windows
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not on Win7
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DavFS2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*nix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gvfs ≥ 1.12.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gnome 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not on PUT
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dolphin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KDE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cyberduck
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Win, OS X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\begin_inset script superscript

\begin_layout Plain Layout
1
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row bottomspace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
libneon
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*nix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
\begin_inset script superscript

\begin_layout Plain Layout
(1)
\end_layout

\end_inset

 Added support for PUT redirections on version 4.4.4
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_trac.cyberduck.io_2015"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
WebDAV clients
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Security
\begin_inset CommandInset label
LatexCommand label
name "sec:Security"

\end_inset

 
\end_layout

\begin_layout Standard
In terms of authentication information for authorization, grids use X.509
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{AC}
\end_layout

\end_inset

s and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{PMI}
\end_layout

\end_inset

s
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wiki:PMI"

\end_inset

 to assign privileges to users, and to carry the privileges around the Grid.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 uses X.509 and a grid privilege management system called 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
In a nutshell, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

 provides the tools to enable Virtual Organizations and attribute-based
 authorization in distributed contexts.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

 supports a rich registration process compliant with the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{EGI}
\end_layout

\end_inset

policies on VO registration services.
 Users can be organized in groups and can be assigned roles and other types
 of attributes.
 User privileges, in the shape of VO memberships and roles, are placed inside
 an X.509 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{AC}
\end_layout

\end_inset

 by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

 server, signed by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

 server, and then embedded in the user's X.509 proxy certificate for carrying
 around the grid
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "AlfieriCCdFGLS03"

\end_inset

.
\end_layout

\begin_layout Standard
Once the clients are authenticated, the X.509 certificate 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DN}
\end_layout

\end_inset

 is used as a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
_user name_
\end_layout

\end_inset

 and the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{VOMS}
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{FQAN}
\end_layout

\end_inset

 are used as 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
_group names_
\end_layout

\end_inset

.
 Apart from this, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 authorization follows the POSIX filesystem authorization semantics, and
 it supports (and, indeed, requires) 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{ACL}
\end_layout

\end_inset

 on its namespace..
\end_layout

\begin_layout Chapter
Schedule
\begin_inset CommandInset label
LatexCommand label
name "chap:Schedule"

\end_inset


\end_layout

\begin_layout Standard
In this section we cover the schedule the project has followed.
 Specifically we talk about the the personnel involved, the chosen development
 methodology, the stages the project has gone through and its planning.
\end_layout

\begin_layout Section
Life cycle model
\end_layout

\begin_layout Standard
The ISO/IEC 12207-1
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "ISO12207"

\end_inset

 standard defines the life cycle model as a 
\end_layout

\begin_layout Quote
“
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
framework of processes and activities concerned with the life cycle that
 may be organized into stages, which also acts as a common reference for
 communication and understanding
\end_layout

\end_inset

”
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
The chosen development methodology for DPMbox was the iterative and incremental
 model, an structured and agile software development methodology.
 
\end_layout

\begin_layout Standard
The life cycle is summarized in a set of iterations.
 The phases of the life cycle are analysis, design, implementation, testing,
 operation and maintenance.
 After performing the analysis (getting requirements specification) and
 application design (defining the system's architecture), we start to code
 already, obtaining a very limited initial release.
 This version will be tested and in case of positive results, we go back
 to the implementation phase where this initial version will be expanded,
 adding new features or improving the existing ones.
 This step has to be repeated as many times as necessary until the expected
 final version has been reached, when the project moves to the exploitation
 phase.
 If the tests don't give the expected results, we must return to the analysis
 stage to find out the problems relating to this version and redirect it.
 Finally, during exploitation phase, errors or mandatory improvements could
 be expected.
 Then it will be time to move on to the maintenance phase, where these incidents
 will be addressed before moving back to the analysis phase.
 
\end_layout

\begin_layout Standard
After summarizing this process, we can say that our model is incremental
 and iterative, thereby we have created product versions that have slowly
 grown in features and performance until a final product stage has been
 reached.
 
\end_layout

\begin_layout Section
Stages
\end_layout

\begin_layout Standard
Here you can read a small brief about the features that particularize each
 of the stages that DPMbox has gone through.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 network access has been granted for a year, so the development must be
 adjusted to that access to allow the needs of on-site deployment, information
 obtainment...
 You can get the big picture at a glance having a look at the Gantt chart,
 figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "fig:gantt"

\end_inset

.
 A tentative development roadmap it is also available on the DPMbox blog
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "10_valencia_calvellido_2015"

\end_inset

.
\end_layout

\begin_layout Subsection
First stage, first approach
\end_layout

\begin_layout Itemize
Get familiar with the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 network, the IT-SDC-ID section and all the terminology of its systems.
\end_layout

\begin_layout Itemize
Disk Pool Manager investigate and learn about through its documentation.
\end_layout

\begin_layout Itemize
Study different approaches and decide which one is the better option.
\end_layout

\begin_layout Itemize
Master the concepts, verbs and particularities of the WebDAV protocol, as
 it looks as the easiest way to approach the DPM.
 
\end_layout

\begin_layout Itemize
Get everything ready for the first 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 visit, trying to assure to make the most of the time I will be there.
\end_layout

\begin_layout Subsection
Second stage, connection library
\end_layout

\begin_layout Itemize
Deep learning about JavaScript, since a development based on this language
 was chosen.
\end_layout

\begin_layout Itemize
Study AJAX calls, the way of communicating with the WebDAV gateway.
\end_layout

\begin_layout Itemize
Start to develop a WebDAV connection library.
 This follows a minimal viable product approach, starting with a simple
 call just to read the information about a WebDAV server, then read its
 contents then...
\end_layout

\begin_layout Itemize
Prepare for the Naples 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 workshop.
 I was invited to contribute to this annual 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 group meeting with a small presentation about DPMbox
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "DPMworkshop"

\end_inset

.
 
\end_layout

\begin_layout Itemize
Build of first working prototype.
\end_layout

\begin_layout Subsection
Third stage, user interface
\end_layout

\begin_layout Itemize
Begin an intensive 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{UX}
\end_layout

\end_inset

 learning.
\end_layout

\begin_layout Itemize
Decide the final design between some different approaches.
\end_layout

\begin_layout Itemize
Investigate w2ui, test it a lot.
 A jQuery UI based interface and other possibilities were discarded.
\end_layout

\begin_layout Itemize
Transform the sketch prototype into the actual interface.
\end_layout

\begin_layout Subsection
Fourth stage, integration
\end_layout

\begin_layout Itemize
Extending the interface and the WebDAV connection library integrating it
 into the Disk Pool Manager software stack.
\end_layout

\begin_layout Itemize
Test the integration between the library and the interface.
\end_layout

\begin_layout Itemize
Get everything ready for the second and final visit to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Build the second working prototype.
\end_layout

\begin_layout Subsection
Fifth stage, deployment
\end_layout

\begin_layout Itemize
Complete a series of full tests.
 
\end_layout

\begin_layout Itemize
Deploy DPMbox on site.
\end_layout

\begin_layout Itemize
Prepare the project's participation in the IX CUSL (Concurso Universitario
 de Software Libre) final phase.
\end_layout

\begin_layout Itemize
Address different issues and comments received from external feedback.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:gantt"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/GanttChart.png
	height 100theight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Gantt chart
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Organization
\end_layout

\begin_layout Standard
The project has been developed entirely by the writer, student of 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Universidad de Cadiz
\end_layout

\end_inset

, carrying out the work of analysis, design and development, including also
 visual interface design.
 The project development has been reviewed and guided by supervisors Alejandro
 Álvarez Ayllón, current employee at 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 IT-SDC-ID section, and Manuel Palomo Duarte, PhD Computer Science in 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Universidad de Cádiz
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Non-Human resources
\begin_inset CommandInset label
LatexCommand label
name "sec:Non-Human-resources"

\end_inset


\end_layout

\begin_layout Standard
As a free software project, DPMbox has been developed using a lot of open
 source and free technologies: Git, jQuery, w2ui...
 You can read more about the libraries and tools employed in the sections
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Version-control"

\end_inset

,
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Program-languages-and"

\end_inset

 and
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Tools"

\end_inset

.
 What is important to bring out in this section is that these tools are
 not only free, as in speech, but also free as in beer.
\end_layout

\begin_layout Standard
For the ordinary development, we have used a laptop with an Apache local
 server, activating its WebDAV modules.
 In the hardware section we have:
\end_layout

\begin_layout Itemize
HP Pavilion DV6 3040ES with the following technical specification:
\end_layout

\begin_deeper
\begin_layout Itemize
Intel Core i7 Q720 Processor
\end_layout

\begin_layout Itemize
4GB Memory
\end_layout

\begin_layout Itemize
128GB SSD Crucial M4
\end_layout

\begin_layout Itemize
GNU/Linux Ubuntu 10.04 and GNU/Linux Mint 17 as OS
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Standard
Then, to have some testing outside the local scope from time to time an
 external cloud server has been hired:
\end_layout

\begin_layout Itemize
Digital Ocean SSD droplet with these characteristics:
\end_layout

\begin_deeper
\begin_layout Itemize
1 Core Processor 
\end_layout

\begin_layout Itemize
512MB Memory 
\end_layout

\begin_layout Itemize
20GB SSD Disk 
\end_layout

\begin_layout Itemize
1TB Transfer 
\end_layout

\begin_layout Itemize
GNU/Linux Ubuntu 14.04 32bits
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Standard
Also, in different development stages DPMbox prototypes have been deployed
 in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 testing instances in CERN IT-SDC-ID section servers.
 The configuration of these machines could be varied, with most of them
 using Scientific Linux 6 as it OS.
\end_layout

\begin_layout Section
Costs
\end_layout

\begin_layout Standard
Project total cost (C) is the aggregate of the material and human resources
 cost.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $TotalCost(C)=MaterialCost(C_{m})+PersonnelCost(C_{p})$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Material costs (C
\begin_inset script subscript

\begin_layout Plain Layout
m
\end_layout

\end_inset

) are constituted by the cost of software (C
\begin_inset script subscript

\begin_layout Plain Layout
s
\end_layout

\end_inset

) and hardware (C
\begin_inset script subscript

\begin_layout Plain Layout
h
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
As seen on previous section the infrastructure requirements for the development
 have been humble, basically the project has only need a single PC computer
 with GNU/Linux and internet connection (about 400€ for a 10 month long
 contract).
 The tools and libraries used were all free to use in this context, therefore
 neither requires cost.
 The price of the personal computer used in the development was 790 €.
 Also the monthly rate of the Digital Ocean server is $5 (though this was
 really hired through GitHub Education developer pack
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "github_education_2015"

\end_inset

).
 The €/$ exchange rate as of September 1st 2015 makes that 4.4€, so the use
 of a Digital Ocean droplet for ten months will cost 44€.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
MaterialCost(C_{m})=SoftwareCost(C_{s})+HardwareCost(C_{h})=0+400+790+44=1,234.8€
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In terms of time, the completion of this project required 1,395 hours of
 work or 8.72 persons per month.
 In the Gantt chart it can be seen that the project is planned to be finished
 in 279 days (each of the five stages lifespan), but the project has matched
 in time with a part-time job, so the amount of time dedicated to the project
 has been 5 hours per day.
\end_layout

\begin_layout Standard
To calculate the staff wage we are taking three different documents:
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "salaries1_BOCM,salaries2_MichaelPage,salaries3_UCA"

\end_inset

 (all of them in spanish and centered on spanish job positions since the
 cost of developing with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 based salaries would be very different).
 The first one gives us a 1,850.12€ monthly wage for a group 1 worker (University
 degree engineers and so), second one stands that a Systems Analyst position
 has an average salary of 1,875€, and in the last one we read that a Computer
 Engineer has a salary of 1,353.22€ per month.
 With the data from this documents we have estimated a salary that would
 be: 1,692.8€
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Staff\,Cost=Monthly\,wage\,\text{×}\,Persons\,per\,month=1,692.8×8.72=14,761,22€
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Also, the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 visits have had a cost of 900€ each (including travels, accommodation and
 subsistence allowance).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Personnel\,Cost(C_{p})=Staff\,Cost+Additional\,Cost=14,761.22+900+900=16,561.22€
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And with all this data we can now calculate the total costs of the project:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
C=C_{m}+C_{p}=1,234.8+16,561.22=17,796,02€
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Section
Risks
\end_layout

\begin_layout Standard
A risk is defined as an uncertain event which should it occur, will have
 an effect on the project meeting its objectives.
 The risk management purpose is to reduce the probability and impact of
 threats, identifying, studying and eliminating sources of risk before they
 threaten the project's success.
 Based on this, we list a number of risks that may affect DPMbox and should
 be addressed:
\end_layout

\begin_layout Itemize
The development team has not been able to meet or know directly the needs
 of any final user.
 The aim is to develop a generalized software, based on our assumptions
 as developers.
 There is a risk that the system is not accepted in general terms by potential
 users.
\end_layout

\begin_deeper
\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Impact: All phases could be affected, because the problem lie in the of
 requirements definition.
 Therefore, all development on the basis of these requirements may be in
 vain.
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Probability: The probability of occurrence will depend on the needs of the
 public to be targeted and the quality and reliability of software obtained.
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Priority: Avoiding this risk is a top priority, as it could mean having
 worked for months in features not needed, or viceversa.
 
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Action
\begin_inset space ~
\end_inset

plan: To prevent this from happening, some working prototypes are planned.
 They can be shown to some acquainted 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 users, that way we can know their point of view.
\end_layout

\end_deeper
\begin_layout Itemize
Late delivery due to lack of knowledge about tools, languages, or even more
 likely the ​​
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 system characteristics.
\end_layout

\begin_deeper
\begin_layout Itemize
Impact: This risk can affect all phases, because in all of them the developer
 requires the use of the tools and a knowledge on the system.
\end_layout

\begin_layout Itemize
Probability: The probability of occurrence is high since the developer does
 not have any previous experience with the system.
\end_layout

\begin_layout Itemize
Priority: The priority will be lower as the project progresses, the learning
 curve is expected to be steep.
\end_layout

\begin_layout Itemize
Action
\begin_inset space ~
\end_inset

plan: It would be ideal to know the different tools and having ever used
 such a system like the DPM, but this time is not possible to avoid the
 risk.
 However, we will try to do a good learning process for each tool, language,
 and also the system.
\end_layout

\end_deeper
\begin_layout Chapter
Project general description
\begin_inset CommandInset label
LatexCommand label
name "chap:Project-general-description"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:logo"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename DPMbox.png
	width 25text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPMbox logo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Product outlook
\end_layout

\begin_layout Standard
The Disk Pool Manager (DPM) is a lightweight grid storage component, allowing
 access to data using commonly used grid protocols over the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

.
 The developed project, DPMbox, is its new web-based interface developed
 in JavaScript.
 
\end_layout

\begin_layout Standard
Its look and feel is similar to desktop file explorers, so a new user won’t
 spend lots of time to adapt to its behaviour.
 In terms of it functionality, it is possible to perform various operations,
 including (multiple) file upload, (multiple) file download, (multiple)
 delete of files and collections.
 Besides that you can also perform searches based on various file properties
 inside a directory and sort the content by those same properties.
 Its panels are slightly responsive for a fast adjustment to your screen,
 and besides that, it has a flexible layout, that you can adapt to suit
 your needs.
\end_layout

\begin_layout Standard
It has a very small size, 79KB (not including external libraries).
 With all its libraries included (jQuery, w2ui) the load size could be less
 than 200KB (all files minified).
\end_layout

\begin_layout Standard
The main purpose of DPMbox is to support the Disk Pool Manager system, however,
 it has been built following the WebDAV standards RFC 4918
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "RFC4918"

\end_inset

 and RFC 5689
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "RFC5689"

\end_inset

, aiming to be compatible with any WebDAV server.
 It has has been developed modularly, and its internal library could be
 used to develop other new applications.
\end_layout

\begin_layout Standard
Chrome/Chromium, FireFox 7+, Safari 5+ and IE 9+ are among supported browsers.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:fed_screenshot"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/FedScreenshot.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPMbox in action
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Repositories
\end_layout

\begin_layout Standard
DPMbox interface is integrated into version 0.16 of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lcgdm-dav
\end_layout

\end_inset

 package.
 After going through various testing stages is already, as of September
 2015, available to download and install from repositories for Fedora 22
 and Fedora 23.
 It is still on testing repositories for EL-5, EL-6 and EL-7.
 By the way, EPEL (Extra Packages for Enterprise Linux) is a volunteer-based
 community effort from the Fedora project to create a repository of high-quality
 add-on packages that complement the Fedora-based Red Hat Enterprise Linux
 (RHEL) and its compatible spinoffs, such as CentOS and Scientific Linux.
\end_layout

\begin_layout Standard
The l
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cgdm-dav
\end_layout

\end_inset

 package status on the repositories can be checked on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:lcgdm-dav_status"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:lcgdm-dav_status"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/lcgdm-dav_status.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
lcgdm-dav package status
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
User characteristics
\end_layout

\begin_layout Standard
The vast majority of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

 users are members of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 experiments or affiliated research projects and should normally use the
 official software frameworks that are available per experiment or project.
 Those frameworks in turn make use of more generic middleware components,
 which are different in the different infrastructures that make up WLCG:
 EGI (European Grid Infrastructure), NDGF (Nordic Data Grid Facility), OSG
 (Open Science Grid) and other partners.
 For service administrators and operations managers each participating infrastru
cture has documentation on how to use or test services.
 
\end_layout

\begin_layout Standard
Currently, the majority of users of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

 come from the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{HEP}
\end_layout

\end_inset

 community for which the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

 is a necessity to analyze the data generated by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{LHC}
\end_layout

\end_inset

 experiment at 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 in Geneva.
 However, a growing number of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

 users come from many other scientific disciplines, such as the biomedical
 field, earth science, astrophysics, fusion science, etc.
\end_layout

\begin_layout Standard
Generally speaking, we can consider our target user a not necessarily high
 level at technical tasks user, but acquainted at file browser interfaces
 or even cloud storing services.
 And anyway, as you can see, the potential DPMbox user profile, being mostly
 science researchers, could be quite heterogeneous.
 Furthermore one of the objectives is to attract new users to this interface,
 particularly the non-
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{HEP}
\end_layout

\end_inset

 users, so, audacious it may sound, we are aiming to design a, universally
 appealing interface, or at least the design will not be focused on a specific
 niche audience.
 
\end_layout

\begin_layout Chapter
Project development
\begin_inset CommandInset label
LatexCommand label
name "chap:Project-development"

\end_inset


\end_layout

\begin_layout Standard
Like traditional computer programs, modern web applications are fully-fledged,
 complex software systems, and in order to be successful their development
 must be thorough and systematic.
 Current web developers need to examine and re-use the body of knowledge
 found within software engineering and demonstrates how to use that knowledge
 within the web environment.
\end_layout

\begin_layout Standard
Web engineering is the application of systematic and quantifiable approaches
 (concepts, methods, techniques, tools) to cost-effective requirements analysis,
 design, implementation, testing, operation, and maintenance of high-quality
 web applications.
 Web engineering is also the scientific discipline concerned with the study
 of these approaches
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wediscipline"

\end_inset

.
\end_layout

\begin_layout Standard
Following a web engineering approach, in this chapter are described all
 the details related with how DPMbox has been constructed: objectives, requireme
nts, solution alternatives, system analysis, design, implementation and
 testing.
\end_layout

\begin_layout Section
System objectives
\begin_inset CommandInset label
LatexCommand label
name "sec:System-objectives"

\end_inset


\end_layout

\begin_layout Standard
The main objectives of DPMbox, from a general point of view, are listed
 below.
 These objectives summarize in a very roughly way the functionality of the
 project:
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create an integrated application
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DPMbox must be a piece of software that can be integrated with the rest
 of Disk Pool Manager software stack.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
OBJ-1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Develop a usable interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The interface developed for DPMbox must be user appealing, being easy to
 familiarize and fast to master, following standard recommendations in terms
 of usability and accessibility.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
OBJ-2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Connect and interact with a WebDAV server
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The system must be able to access a WebDAV server, being able to read and
 understand its information and commands, interacting with it in a way the
 communication can flow both ways.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
OBJ-3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Requirements
\end_layout

\begin_layout Standard
A requirement is a capability that a software product must possess or something
 a product must do in order to ultimately satisfy a user need.
 Requirements form the basis for any software development project, as they
 drive all activities that follow.
 As a result, it is very important to get requirements right, otherwise,
 the entire project can fail.
 In fact, poor requirements are among the top reasons for project failures.
\end_layout

\begin_layout Subsection
Functional
\end_layout

\begin_layout Standard
The functional requirements define the functions of the software system
 and its components.
\end_layout

\begin_layout Subsubsection
Files
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Upload a file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DPMbox must be able to upload a file to the system, either through a web
 form or in a drag and drop fashion.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
FRQ-1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Download a file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The system must be able to download files from the server and the user must
 be able to save it on its local filesystem.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
FRQ-2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete a file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The interface must offer the possibility to remove a specific file from
 the server.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
FRQ-3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Directories
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create a directory
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
It must be possible to create a directory, giving a valid name.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
FRQ-4
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read a directory
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
It should be possible to select a certain folder and read its content, of
 files and collections.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
FRQ-5
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete a directory
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user should be allowed to delete a certain folder, being it empty or
 not.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
FRQ-6
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Information
\end_layout

\begin_layout Standard
The information requirements detail data that the system uses during the
 development and execution to properly perform its operations.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
File
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Required information
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
Filename
\end_layout

\begin_layout Itemize
Size
\end_layout

\begin_layout Itemize
Modification date
\end_layout

\begin_layout Itemize
Metalink
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IRQ-1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Collection
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Required information
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Itemize
Name
\end_layout

\begin_layout Itemize
Path
\end_layout

\begin_layout Itemize
Children collections
\end_layout

\begin_layout Itemize
Files contained
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IRQ-2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Non-functional
\end_layout

\begin_layout Standard
Non-functional requirements specify criteria for various categories that
 the software must meet to ensure a good level of quality beyond its functions
 or operations.
\end_layout

\begin_layout Subsubsection
Performance
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fast loading
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The system must be able to load and perform operations in a reasonable time.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Security
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protected from attacks
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DPMbox should react accordingly to possible attacks compromising the system's
 security.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Technology
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WebDAV server
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To connect to the DPM server, the WebDAV protocol must be used.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Maintainability
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ease to maintain
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The system, and specially its internal code, should be easy to read and
 understand offering an easy maintenance.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-4
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Extensibility
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Possibility to extend
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The system should be constructed in a way that future functionality can
 be added with no harm.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-5
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Portability
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:portability"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Accessible from different systems
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The use of DPMbox cannot be restricted to particular operating systems and/or
 web browsers.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-6
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Interface
\end_layout

\begin_layout Standard
The interface requirements are linked with the concepts and standards described
 on section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:User-interface"

\end_inset

, usability, accessibility and user guidance.
\end_layout

\begin_layout Subsubsection
Usability and accessibility
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A usable interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The system must comply with defined standards on the topics of usability,
 accessibility and user guidance.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NRQ-5
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Solution alternatives
\end_layout

\begin_layout Standard
Here we talk about technological alternatives that could have met the needs
 arised from the system requirements, detailing the decisions taken.
 
\end_layout

\begin_layout Standard
Giving the particularities of the system we look at the strengths and weaknesses
 of traditional web UIs and we see that JavaScript web UIs address these
 weaknesses but raise their own issues, which, we assert, can be addressed
 within the paradigm
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-396-5-052069"

\end_inset

.
\end_layout

\begin_layout Subsection
Traditional web user interfaces 
\end_layout

\begin_layout Standard
The very first web pages were hypertext based, where links in one page will
 load a different related page.
 Traditional web UIs follow this paradigm but the content is dynamically
 generated based on the parameters attached to a given link.
 Key characteristics of such UIs are multi-page interface, full-page load
 for each user interaction, and server-side view generation.
\end_layout

\begin_layout Standard
The key strengths of traditional web UIs include: 
\end_layout

\begin_layout Itemize
Cross-browser compatibility 
\end_layout

\begin_layout Itemize
Bookmarkable URLs 
\end_layout

\begin_layout Itemize
Search-engine friendly 
\end_layout

\begin_layout Itemize
Accessibility friendly
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
The strengths are mostly due to the UI being essentially a set of linked
 documents rather being highly interactive.
 The flip side of these strengths is the following weaknesses: 
\end_layout

\begin_layout Itemize
Low interactivity
\end_layout

\begin_layout Itemize
Slow loading 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Low interactivity prevents users from easily customizing data visualization.
 Slow loading is due to a full-page load for each user interaction and the
 need for a server-side call even for a new view of the same data.
 We note that these weaknesses are largely inherent and cannot be fully
 addressed within the paradigm of traditional web UIs, which brings us to
 consider JavaScript web UIs.
 
\end_layout

\begin_layout Subsection
JavaScript web user interfaces
\end_layout

\begin_layout Standard
Modern web UIs can be highly interactive and provide a user experience akin
 to a desktop application.
 Such UIs may be implemented with a number of different technologies but
 we focus our attention on web UIs built using JavaScript and AJAX.
 Key characteristics of such UIs are single-page interface, data loaded
 on-demand via AJAX, and client-side view generation.
 
\end_layout

\begin_layout Standard
The key strengths of JavaScript web UIs, with respect to traditional web
 UIs include: 
\end_layout

\begin_layout Itemize
High interactivity 
\end_layout

\begin_layout Itemize
Fast-loading
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
High interactivity allows the user to easily customize data visualization.
 Fast loading is due to data being loaded on demand and the ability to generated
 new views of the same data on the client-side avoiding a server-side call.
 The flip side of these strengths is the following weaknesses: 
\end_layout

\begin_layout Itemize
Browser incompatibilities 
\end_layout

\begin_layout Itemize
Slow client-side rendering 
\end_layout

\begin_layout Itemize
Non-bookmarkable URLs 
\end_layout

\begin_layout Itemize
Not search-engine friendly 
\end_layout

\begin_layout Itemize
Not accessibility friendly
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Comparing the above strengths and weaknesses with those of traditional web
 UIs, it is immediately apparent that they are the converse of each other.
 It is therefore worth attempting to address the weaknesses of JavaScript
 web UIs, and we show in the next subsection that, unlike those of traditional
 web UIs, they can be addressed within the paradigm.
 
\end_layout

\begin_layout Subsection
Addressing JavaScript web user interface issues
\end_layout

\begin_layout Standard
Several of the issues of JavaScript web UIs, identified in the previous
 subsection, have already been resolved by improvements in web browsers
 and JavaScript libraries.
 Browser incompatibilities have largely been eliminated by improved standards
 compliance by the current releases of the major web browsers.
 This is attested by the results of the web standards project Acid3 tests,
 that check web browser compliance with elements of various web standards,
 particularly the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DOM}
\end_layout

\end_inset

 and JavaScript.
 Furthermore, JavaScript libraries, such as jQuery, provide abstraction
 layers that cover most of the remaining corner case browser incompatibilities.
 Faster hardware and browsers mean that slow client-side rendering is no
 longer a major issue and can often be resolved with basic tuning of UI
 code.
 
\end_layout

\begin_layout Standard
Resolving the remaining issues requires explicit effort on the part of the
 UI developer.
 Sustainable development, for example, can be resolved by using a client-side
 MVC framework.
 URLs can be made bookmarkable by explicit URL hash management using JavaScript
 library plugins.
 Search-engine optimization and accessibility can be addressed in similar
 ways.
 
\end_layout

\begin_layout Standard
Although some explicit effort is required to resolve the issues of JavaScript
 UIs, all the issues can be resolved within the paradigm.
\end_layout

\begin_layout Subsection
Graphical interface library
\end_layout

\begin_layout Standard
To set the interface design, different frameworks and approaches were tested,
 jQuery UI, the graphical library from the creators from jQuery, was the
 first option.
 This library is a mature collection of GUI widgets, animated visual effects,
 and themes implemented with jQuery.
 According to JavaScript analytics service, Libscore, jQuery UI is used
 on over 176,000 websites, making it the second most popular JavaScript
 library on the Web.
 Notable users include Pinterest, PayPal, IMDB, Huffington Post, or Netflix.
 Like jQuery, is free and open-source and distributed by the jQuery Foundation
 under the MIT License
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_jqueryui.com_2015"

\end_inset

.
\end_layout

\begin_layout Standard
jQuery UI was selected because is a widely known library, and so, the DPMbox
 interface will be easy to understand and maintain, and could also be easily
 adapted to other uses or modified for extended support in the future.
 Even a small prototype was developed using this, but in a deeper research
 exploring alternatives, I stumble upon w2ui, a “modern, intuitive JavaScript
 UI library for building rich data-driven web application”.
 
\end_layout

\begin_layout Standard
Using jQuery UI it would has been needed to use some other components to
 implement certain interface components, for example zTree for the directory
 folder management.
 jQuery UI is very useful but for a complete user interface creation we
 were going to have to build everything almost from scratch (toolbars, menus,
 file listings…) and a library like zTree is extremely powerful but it’s
 also like a big dinosaur with a bunch of files to load and manage.
 
\end_layout

\begin_layout Standard
With this decision is possible that a bit of scope or control was lost but
 using w2ui we stuck with not reinventing the wheel and KISS (Keep It Simple,
 Stupid) design principles, making things easier to understand, maintain
 and even expand.
 Indeed w2ui, as a framework to develop a file browser interface, suits
 way better the needs of DPMbox.
 You can read more about its features on section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Program-languages-and"

\end_inset

.
\end_layout

\begin_layout Standard
All the initially designed and proposed elements are present in the final
 interface designed with w2ui.
 Upon a layout divided in a top panel and three horizontal ones under it,
 you can find the sidebar managing the directory tree, a grid in the center
 showing the files and including a toolbar, and then in the right panel
 there is the directory information.
 
\end_layout

\begin_layout Subsubsection
Further alternatives
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MochaUI Based on MooTools, a different JavaScript library, the connection
 between these may not lead to best performance.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
YUI
\begin_inset space ~
\end_inset

Library Discontinued by the end of 2014.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Knockoutjs Really small size, just 20KB, but also offering limited options.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Kendo
\begin_inset space ~
\end_inset

UI Not free license.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Ember,
\begin_inset space ~
\end_inset

Dojo Both powerful and beautifully designed, but not suitable if we want
 to have a small size interface.
\end_layout

\begin_layout Section
System analysis
\end_layout

\begin_layout Standard
This section covers the analysis of the information system to be developed,
 using mainly the UML modeling language.
 In particular, we cover: 
\end_layout

\begin_layout Itemize
The use cases that describe the steps in the usual processes of the project.
\end_layout

\begin_layout Itemize
The conceptual data model used in the application, based on the information
 requirements.
\end_layout

\begin_layout Itemize
The behavioural model is also presented, with some sequence diagrams depicting
 the events that external actors generate, their order, and possible inter-syste
m events, 
\end_layout

\begin_layout Itemize
And finally the UI model, with some navigation interfaces depicted.
\end_layout

\begin_layout Subsection
Use case model
\end_layout

\begin_layout Standard
To describe the different behaviors of the system, we will use the UML modeling
 language, which represents the functional requirements of the system, focusing
 on what the system does and not the way it does it.
 
\end_layout

\begin_layout Subsubsection
Actors
\end_layout

\begin_layout Standard
Here you can find the different roles that participate in the system.
 You can see them on figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:actors"

\end_inset

 Actors can be roles of individuals, external systems or time (time events).
 In the case of DPMbox only two kind of actors are presented since the system
 relies on a permissions and virtual organizations security system (explained
 on section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Security"

\end_inset

), therefore any operation on the system executed by a certain user will
 be constrained to his permissions and group membership.
 
\end_layout

\begin_layout Standard
As you can see, we talk about user and anonymous user.
 We consider a user, the one that the system know about and can check its
 permissions accordingly.
 But the system also allows you to explore or perform other operations (dependin
g on the way security directives are set) even if it knows nothing about
 you, that is an anonymous user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:actors"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/Actors.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Actors
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
User
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A user the system is able to check on its security scheme, it is somehow
 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
registered 
\end_layout

\end_inset

 on the system.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Authorized user
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A user the system knows nothing about.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Use cases
\end_layout

\begin_layout Standard
Use cases describe the steps (and its deviations) to complete a certain
 operation in the system.
\end_layout

\begin_layout Subsubsection
Read a collection
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read a collection
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User or Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main scenario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
A user clicks on a specific directory.
\end_layout

\begin_layout Enumerate
DPM server checks and accepts the request.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternative flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Description
2a The user is not allowed to perform that operation.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Create a collection
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="middle" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create a collection
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User or Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main scenario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
A user clicks on new directory button.
\end_layout

\begin_layout Enumerate
The user writes a collection name.
\end_layout

\begin_layout Enumerate
DPM server checks the name and accepts the request.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternative flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Description
2a The user cancels the operation.
\end_layout

\begin_layout Description
3a The user is not allowed to perform that operation.
\end_layout

\begin_layout Description
3b The given name is not valid.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Delete a collection
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete a collection
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User or Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main scenario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
A user clicks on delete directory button.
\end_layout

\begin_layout Enumerate
The user confirms the deletion.
\end_layout

\begin_layout Enumerate
DPM server checks and accepts the request.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternative flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Description
2a The user cancels the operation.
\end_layout

\begin_layout Description
3a The user is not allowed to perform that operation.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Download a file
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Download a file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User or Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main scenario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
A user clicks on download button.
\end_layout

\begin_layout Enumerate
The user selects the location to save the file.
\end_layout

\begin_layout Enumerate
DPM server checks and accepts the request.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternative flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Description
2a The user cancels the operation.
\end_layout

\begin_layout Description
3a The user is not allowed to perform that operation.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Upload a file
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Upload a file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User or Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main scenario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
A user clicks on upload button.
\end_layout

\begin_layout Enumerate
The user selects the file(s) to upload.
\end_layout

\begin_layout Enumerate
DPM server checks and accepts the request.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternative flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Description
2a The user cancels the operation.
\end_layout

\begin_layout Description
3a The user is not allowed to perform that operation.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Delete a file
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete a file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User or Anonymous user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Main scenario
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
A user clicks on delete button.
\end_layout

\begin_layout Enumerate
The user confirms the deletion.
\end_layout

\begin_layout Enumerate
DPM server checks and accepts the request.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternative flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Description
2a The user cancels the operation.
 
\end_layout

\begin_layout Description
3a The user is not allowed to perform that operation.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Domain data conceptual model
\end_layout

\begin_layout Standard
This model is drawn from the information requirements.
 A conceptual UML class diagram, in figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:conceptualdatamodel"

\end_inset

, is developed, identifying classes, attributes, relationships, additional
 restrictions and derivation rules, if any.
 
\end_layout

\begin_layout Subsubsection
Files
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
Attribute
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
Description
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Filename
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The name of the file (including extension).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The file size, in KB.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Modification date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The last date the file has been altered.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Metalink
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The metalink information (actual hosting server, alternate locations...)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Collections
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="15text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
Attribute
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
Description
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The name of the collection in the system.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Path
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The router of the collection, starting from the server root.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Children collections
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The list of collections within another one.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Files contained
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The list of files inside that directory.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expanded
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
It indicates if the collection node is expanded in the tree or not.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First parent
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tells if the node is the top element on the route.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:conceptualdatamodel"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/ConceptualDataModel.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Domain data conceptual model
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Behavioural Model
\end_layout

\begin_layout Standard
Not all possible sequence diagrams are shown (different use cases and scenarios)
, we present a small sample that may be representative of the the whole
 system:
\end_layout

\begin_layout Subsubsection
Create a collection
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:seqcreatecoll"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/SeqDiagram_CreateCollection.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram, create collection
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
A user clicks on new directory button.
\end_layout

\begin_layout Enumerate
DPMbox shows a text box asking for a name.
\end_layout

\begin_layout Enumerate
The user writes a collection name.
\end_layout

\begin_layout Enumerate
DPMbox validates the name.
\end_layout

\begin_layout Enumerate
DPMbox send the new collection request to the server.
\end_layout

\begin_layout Enumerate
DPM server checks and responds to the request.
\end_layout

\begin_layout Enumerate
DPMbox present the information to the user.
\end_layout

\begin_layout Subsubsection
Download file
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:seqdnlfile"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/SeqDiagram_DownloadFile.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram, download file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
A user clicks on download button.
\end_layout

\begin_layout Enumerate
DPMbox send the download request to the server.
\end_layout

\begin_layout Enumerate
DPM server checks and responds to the request.
\end_layout

\begin_layout Enumerate
DPMbox present the file to the user.
\end_layout

\begin_layout Enumerate
The user selects the location to save the file.
\end_layout

\begin_layout Subsubsection
Delete file
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:seqdeletefile"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/SeqDiagram_DeleteFile.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram, delete file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
A user clicks on delete button.
\end_layout

\begin_layout Enumerate
DPMbox shows the confirm deletion message.
\end_layout

\begin_layout Enumerate
The user confirms the deletion.
\end_layout

\begin_layout Enumerate
DPMbox send the deletion request to the server.
\end_layout

\begin_layout Enumerate
DPM server checks and responds to the request.
\end_layout

\begin_layout Enumerate
DPMbox present the information to the user.
\end_layout

\begin_layout Subsection
User interface model
\end_layout

\begin_layout Standard
This section provides an approximation to the appearance and navigation
 through the user interface.
\end_layout

\begin_layout Subsubsection
Navigation model
\end_layout

\begin_layout Standard
In the navigation model we can see that the main operation in DPMbox is
 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
read collection
\end_layout

\end_inset

, this is so because after almost every other operation the collection state
 is altered, so the content must be checked again.
 The only exception to this is with the download functionality, since the
 contents in the collection does not change after this operation.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:navmodel"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/NavigationDiagram.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Navigation model
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Prototypes
\end_layout

\begin_layout Standard
You can check some sketched views of the user interface design with the
 prototypes shown on figures
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:intschememain"

\end_inset

 (main screen),
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:intschemeaction"

\end_inset

 (action required screen) and
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:intschemeerror"

\end_inset

 (error detected screen).
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:intschememain"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/design_scheme.png
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interface design, main scheme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:intschemeaction"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/design_action.png
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interface design, action required
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:intschemeerror"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/design_error.png
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interface design, error
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
System design
\begin_inset space ~
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:System-design"

\end_inset


\end_layout

\begin_layout Standard
DPMbox design has followed a minimal viable product approach, being started
 as a WebDAV connection interface and then being adapted to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 specifications.
 It has been constructed modularly and could be basically divided in two
 parts: the web user interface and the JavaScript API that communicates
 with the server.
 
\end_layout

\begin_layout Subsection
Logic architecture
\end_layout

\begin_layout Standard
Schuldt in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "reference_db_Schuldt09a"

\end_inset

 defines a multi-tier architecture as 
\end_layout

\begin_layout Quotation
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
“A software architecture in which different software components, organized
 in tiers (layers), provide dedicated functionality.
 The most common occurrence of a multi-tier architecture is a three-tier
 architecture consisting of a data management tier (mostly encompassing
 one or several data- base servers), an application tier (business logic)
 and a client tier (interface functionality).
 Novel deployments come with additional tiers.
 Web information systems, for instance, encompass a dedicated tier (web
 tier) between client and application layer.
 Conceptually, a multi-tier architecture results from a repeated application
 of the client/server paradigm.
 A component in one of the middle tiers is client to the next lower tier
 and at the same time acts as server to the next higher tier.”
\end_layout

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
A three tier architecture is a very common architecture.
 It is typically split into a presentation or GUI tier, an application logic
 tier, and a data tier.
 An example can be seen on figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:three-tier"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:three-tier"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/Three-tier_application.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Visual overview of a three-tiered application
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The presentation or GUI tier contains the user interface of the application.
 The presentation tier is 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
dumb
\end_layout

\end_inset

, meaning it does not make any application decisions.
 It just forwards the user's actions to the application logic tier.
 If the user needs to enter information, this is done in the presentation
 tier too.
\end_layout

\begin_layout Standard
The application logic tier makes all the application decisions.
 This is where the business logic is located.
 The application logic knows what is possible and what is allowed to do
 in the system.
 The application logic reads and stores data into the data tier.
\end_layout

\begin_layout Standard
The data tier stores the data used in the application.
 The data tier can typically store data safely, perform transactions or
 search through large amounts of data quickly.
 
\end_layout

\begin_layout Standard
The purpose of multitier architectures is to insulate the different layers
 of the application from each other.
 The GUI client does not know how the server is working internally, and
 the server does not know how the database server works internally.
 They just communicate via standard interfaces.
\end_layout

\begin_layout Standard
Web applications specially have another advantage.
 If you make updates to the GUI client or the application logic running
 on the server, all clients get the latest updates the next time they access
 the application.
 The browser downloads the updated client, and the updated client accesses
 the updated server.
 
\end_layout

\begin_layout Standard
DPMbox is integrated into the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 software stack.
 Thus, it must be analyzed in that context, showing us that it is just another
 layer of the whole system.
 This can be seen on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:logicscheme"

\end_inset

.
 The DPMbox layer does not know any operating details of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 layer, they just connect trough a common interface, in this case a WebDAV
 interface.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:logicscheme"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/DPMbox_globalscheme.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPMbox logic scheme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Physical architecture
\end_layout

\begin_layout Standard
In this section, we describe the major hardware components that are present
 in the physical architecture of our system.
 Again, for the physical view, DPMbox cannot be detached from the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 architecture.
 Physically a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 server can be a group of machines or even just one, but in a global view
 the physical architecture is a typical client-server model.
 This is represented in figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:physarch"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:physarch"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/Client-Server.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPMbox physical architecture
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
DPM server
\end_layout

\begin_layout Standard
Apart from the special case of a purely test setup, is recommended that
 a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 server provides (at least):
\end_layout

\begin_layout Itemize
2Ghz processor with 512MB of memory (not a hard requirement) 
\end_layout

\begin_layout Itemize
Dual power supply 
\end_layout

\begin_layout Itemize
Mirrored system disk 
\end_layout

\begin_layout Itemize
Database backups 
\end_layout

\begin_layout Itemize
It will usually runs on Scientific Linux, and the WebDAV interface (including
 DPMbox view) is offered through Apache
\end_layout

\begin_layout Subsubsection
Client access
\end_layout

\begin_layout Standard
The non-functional requirement NRQ-6, in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "tab:portability"

\end_inset

 indicates that the web platform should be accessible from any kind of operating
 system through a web browser.
 Thus, the only restriction to users is having a modern web browser that
 provides access and supports the latest web standards.
\end_layout

\begin_layout Subsection
DPMbox WebDAV communication
\end_layout

\begin_layout Standard
Taking the former 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 HTTP/WebDAV frontend implementation, the first step in the development
 process was to build an API with JavaScript that can interact with it.
 That API uses AJAX calls to perform the HTTP/WebDAV requests and receives
 the data in an 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 object.
 This way it is possible to expose WebDAV standard methods like PROPFIND
 or MKCOL and use the information provided by them in an HTML or any other
 type of document through JavaScript and jQuery.
 
\end_layout

\begin_layout Standard
What the library offers is (method with its corresponding WebDAV call in
 brackets): 
\end_layout

\begin_layout Subsubsection
HTTP verbs
\end_layout

\begin_layout Description
get (GET) 
\end_layout

\begin_layout Description
post (POST) 
\end_layout

\begin_layout Description
head (HEAD) 
\end_layout

\begin_layout Description
mkcol,
\begin_inset space ~
\end_inset

createFolder (MKCOL) 
\end_layout

\begin_layout Description
put,
\begin_inset space ~
\end_inset

createFile (PUT) 
\end_layout

\begin_layout Description
remove (DELETE) 
\end_layout

\begin_layout Description
report (REPORT) 
\end_layout

\begin_layout Description
getVersionTreeReport (REPORT) 
\end_layout

\begin_layout Description
checkout (CHECKOUT) 
\end_layout

\begin_layout Description
uncheckout (UNCHEKCOUT) 
\end_layout

\begin_layout Description
checkin (CHECKIN) 
\end_layout

\begin_layout Description
versionControl (VERSION-CONTROL) 
\end_layout

\begin_layout Description
lock (LOCK) 
\end_layout

\begin_layout Description
unlock (UNLOCK) 
\end_layout

\begin_layout Description
propfind,
\begin_inset space ~
\end_inset

getProperty (PROPFIND) 
\end_layout

\begin_layout Description
proppatch,
\begin_inset space ~
\end_inset

setProperty,
\begin_inset space ~
\end_inset

removeProperty (PROPPATCH)
\end_layout

\begin_layout Standard
Besides the main verbs, the library takes care of global data as XML headers
 and defines some additional methods.
\end_layout

\begin_layout Subsubsection
Additional methods
\end_layout

\begin_layout Description
isCollection: Returns whether an element is a collection or not by looking
 for a collection 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XML}
\end_layout

\end_inset

 tag inside a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
resourcetype
\end_layout

\end_inset

 property.
 For a DPM server there’s no need to use it since a DPM response includes
 a specific property 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
iscollection
\end_layout

\end_inset

 to check this, but the method is needed for standard WebDAV server support.
\end_layout

\begin_layout Description
getNodesByTag: Works exactly like the standard 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
getElementsByTagName
\end_layout

\end_inset

, however introduces the ability to filter those results by namespace, which
 is important for handling WebDAV results.
\end_layout

\begin_layout Description
seekToNode: Sets resource variable to first node matched via 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
getNodesByTag
\end_layout

\end_inset

, and returns this, allowing further processing.
\end_layout

\begin_layout Description
eachNode: Executes a function on each element.
\end_layout

\begin_layout Description
nodeText: Get the text contained by a node.
\end_layout

\begin_layout Description
nodeName: Returns the name of a node (the tag name, essentially).
\end_layout

\begin_layout Description
extendbeforesend: jQuery.ajax option 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
beforeSend
\end_layout

\end_inset

 may be set to a function reference, and this function will fire prior to
 the request being sent.
 It gets the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 object, so this is the point you will want to do things like set headers,
 for example.
\end_layout

\begin_layout Description
prepare: Prepares the WebDAV call.
 Here we want to ensure integrity of call object, verify WebDAV method requested
, set any authorization information (if necessary), and return the modified
 call object.
 WebDAV servers usually respond in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XML}
\end_layout

\end_inset

 but some WebDAV methods will not return anything at all, or return an empty
 response.
 This matters to jQuery in that the success method of a jQuery.ajax options
 object won’t fire if the response could not be parsed (although the complete
 method will).
 Is needed to be aware of what 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
dataType
\end_layout

\end_inset

 of your AJAX response will be, and set it appropriately.
\end_layout

\begin_layout Subsection
Files upload and redirection
\end_layout

\begin_layout Standard
In the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 architecture one entity handles the namespace with the metadata, and other
 ones store the files with the actual data.
 This means that any request must go through a server hosting the namespace
 first, and then redirect to the disk node storing the physical file.
 We execute a PUT call and the file won’t be yet uploaded but 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 will answer back, then our web application has to try a second time.
 The URL needed to actually do the PUT would look like this, you can see
 the specific 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 node where the file will be uploaded, including a token validating the
 transaction:
\end_layout

\begin_layout Verbatim
http://lxfsra04a04.cern.ch/srv/dpm/01/nogroup/2015-03-02/XHR.js.zip.2900489
\end_layout

\begin_layout Verbatim
.0?sfn=%2Fdpm%2Fcern.ch%2Fhome%2Fdteam%2Faalvarez%2Fpublic%2Fcollection_d
\end_layout

\begin_layout Verbatim
%2FXHR.js.zip&dpmtoken=dbf5fcbe-7c31-4849-aa57-b07c6b474f5e&token=ojkU%2
\end_layout

\begin_layout Verbatim
FdgyPqTYEvu4TfZAyueVDqQ%3D%401425288602%401
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:redirection"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/redirection.png
	width 40text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPM redirection process
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
User agents commonly apply same-origin restrictions to network requests.
 These restrictions prevent a client-side Web application as DPMbox running
 from one origin from obtaining data retrieved from another origin, and
 also limit unsafe HTTP requests that can be automatically launched toward
 destinations that differ from the running application’s origin.
 In user agents that follow this pattern, network requests typically include
 user credentials with cross-origin requests, including HTTP authentication
 and cookie information.
 As DPMbox relies heavily on 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 calls this has to be handled carefully.
\end_layout

\begin_layout Standard
You can check a bit of history of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CORS}
\end_layout

\end_inset

 and why this is happening on
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_cruz_2015"

\end_inset

.
\end_layout

\begin_layout Standard
In early stages of the development, the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 initial behaviour was to answer with a 302 code indicating redirection,
 and then the browser will try transparently to reach that new location.
 That would work it out, but the thing is that 30x responses are treated
 as error by 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CORS}
\end_layout

\end_inset

 specification
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "W3C:CORS"

\end_inset

:
\end_layout

\begin_layout Quote
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
This is the actual request.
 Apply the make a request steps and observe the request rules below while
 making the request.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

If the response has an HTTP status code of 301, 302, 303, 307, or 308 Apply
 the cache and network error steps.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

(…)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Whenever the network error steps are applied, terminate the algorithm that
 invoked this set of steps and set the cross-origin request status to network
 error.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Note: This has no effect on setting of user credentials.
 I.e.
 if the block cookies flag is unset, cookies will be set by the response.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Whenever the cache and network error steps are applied, follow these steps:
\begin_inset Newline newline
\end_inset

Remove the entries in the preflight result cache where origin field value
 is a case-sensitive match for source origin and URL field value is a case-sensi
tive match for request URL.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Apply the network error steps acting as if the algorithm that invoked the
 cache and network error steps invoked the network error steps instead.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So with this configuration it would be impossible to get any information
 of the response, not any header at a JavaScript level, specifically the
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Location
\end_layout

\end_inset

 header.
 Finally, the solution given was manage the uploads though a first empty
 PUT including a header 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
X-No-Redirect
\end_layout

\end_inset

 and the server will answer with a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
202 Accepted
\end_layout

\end_inset

 response.
 We can extract any header from this type of response as it is not treated
 as error for 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CORS}
\end_layout

\end_inset

 requests.
\end_layout

\begin_layout Standard
After that we have to include this header information to our server 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CORS}
\end_layout

\end_inset

 security settings and add it to the directive 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Access-Control-Expose-Headers.
\end_layout

\end_inset

 In short, it is necessary to configure the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 server to response with the headers included on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:Access-Control-Configuration-1"

\end_inset

.
\end_layout

\begin_layout Verse
\begin_inset listings
lstparams "float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Description

Access-Control-Allow-Origin: UrlWhereDPMboxIsHosted.host 
\end_layout

\begin_layout Description

Access-Control-Allow-Credentials: true 
\end_layout

\begin_layout Description

Access-Control-Allow-Methods: ACL, CANCELUPLOAD, CHECKIN, CHECKOUT, COPY,
 DELETE, GET, HEAD, LOCK, MKCALENDAR, MKCOL, MOVE, OPTIONS, POST, PROPFIND,
 PROPPATCH, PUT, REPORT, SEARCH, UNCHECKOUT, UNLOCK, UPDATE, VERSION-CONTROL
 
\end_layout

\begin_layout Description

Access-Control-Allow-Headers: Authorization, Overwrite, Destination, Content-Typ
e, Depth, User-Agent, Translate, Range, Content-Range, Timeout, X-File-Size,
 X-Requested-With, Accept, Accept-Version, If-Modified-Since, X-File-Name,
 Cache-Control, Location, Lock-Token, If, X-No-Redirect 
\end_layout

\begin_layout Description

Access-Control-Expose-Headers: DAV, content-length, Allow, Location
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Access-Control Configuration
\begin_inset CommandInset label
LatexCommand label
name "lis:Access-Control-Configuration-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
User interface
\begin_inset CommandInset label
LatexCommand label
name "sub:User-interface"

\end_inset


\end_layout

\begin_layout Standard
As said by Donal Norman
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Norman02"

\end_inset

:
\end_layout

\begin_layout Quote
“
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
When a device as simple as a door has to come with an instruction manual—even
 a one-word manual—then it is a failure, poorly designed.
 .
\end_layout

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
As one of the main objectives of DPMbox was to attract new users to the
 system, the user interface design must be very easy to user appealing to
 the final user.
 Following Mandel Golden rules of User Interface Design
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Mandel1997"

\end_inset

:
\end_layout

\begin_layout Itemize
Place Users in Control 
\end_layout

\begin_layout Itemize
Reduce Users' Memory Load 
\end_layout

\begin_layout Itemize
Make the Interface Consistent
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
A way to accomplish this goals is to make the GUI quite similar to the common
 file browsers that most people are used to.
\end_layout

\begin_layout Standard
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
Usability
\end_layout

\end_inset

 is the extent to which a product can be used by specified users to achieve
 specified goals with effectiveness, efficiency and satisfaction in a specified
 context of use.
\end_layout

\begin_layout Standard
The concept of usability is defined of the ISO 9241 standard by effectiveness,
 efficiency, and satisfaction of the user.
 Part 11
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "iso9241-11"

\end_inset

 gives the following definition of usability: 
\end_layout

\begin_layout Itemize
Usability is measured by the extent to which the intended goals of use of
 the overall system are achieved (effectiveness).
 
\end_layout

\begin_layout Itemize
The resources that have to be expended to achieve the intended goals (efficiency
).
 
\end_layout

\begin_layout Itemize
The extent to which the user finds the overall system acceptable (satisfaction).
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
Accessibility
\end_layout

\end_inset

 of a system describes its ease of reach, use and understanding.
 In terms of user experience design it can also be related to the overall
 comprehensibility of the information and features.
 It contributes to shorten the learning curve attached with the system.
 Accessibility in many contexts can be related to the ease of use for people
 with disabilities and comes under usability.
\end_layout

\begin_layout Standard
The information presentation is described in Part 12 of the ISO 9241
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "iso9241-12"

\end_inset

 standard for the organization of information (arrangement, alignment, grouping,
 labels, location), for the display of graphical objects, and for the coding
 of information (abbreviation, color, size, shape, visual cues) by seven
 attributes.
 The “attributes of presented information” represent the static aspects
 of the interface and can be generally regarded as the “look” of the interface.
 The attributes are detailed in the recommendations given in the standard.
 Each of the recommendations supports one or more of the seven attributes.
 The seven presentation attributes are: 
\end_layout

\begin_layout Itemize
Clarity: the information content is conveyed quickly and accurately.
 
\end_layout

\begin_layout Itemize
Discriminability: the displayed information can be distinguished accurately.
 
\end_layout

\begin_layout Itemize
Conciseness: users are not overloaded with extraneous information.
 
\end_layout

\begin_layout Itemize
Consistency: a unique design, conformity with user’s expectation.
 
\end_layout

\begin_layout Itemize
Detectability: the user’s attention is directed towards information required.
 
\end_layout

\begin_layout Itemize
Legibility: information is easy to read.
 
\end_layout

\begin_layout Itemize
Comprehensibility: the meaning is clearly understandable, unambiguous, interpret
able, and recognizable.
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
User
\begin_inset space ~
\end_inset

guidance
\end_layout

\end_inset

 appears in Part 13 of the ISO 9241
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "iso9241-13"

\end_inset

 standard, it describes that information should be readily distinguishable
 from other displayed information and should be specific for the current
 context of use.
 User guidance can be given by the following five means: 
\end_layout

\begin_layout Itemize
Prompts indicating explicitly (specific prompts) or implicitly (generic
 prompts) that the system is available for input.
 
\end_layout

\begin_layout Itemize
Feedback informing about the user’s input timely, perceptible, and non-intrusive.
 
\end_layout

\begin_layout Itemize
Status information indicating the continuing state of the application, the
 system’s hardware and software components, and the user’s activities.
 
\end_layout

\begin_layout Itemize
Error management including error prevention, error correction, user support
 for error management, and error messages.
 
\end_layout

\begin_layout Itemize
On-line help for system-initiated and user initiated requests with specific
 information for the current context of use.
 
\end_layout

\begin_layout Subsubsection
Sketch
\end_layout

\begin_layout Standard
Thereby, the GUI of DPMbox has been designed following these guidelines.
 In the figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:design_prototype"

\end_inset

 you can see an initial prototyped design.
 Upon a layout divided in a top panel and three horizontal ones under it
 you can find the sidebar managing the directory tree, a grid in the center
 showing the files including a toolbar, and then in the right panel there
 is the directory information.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:design_prototype"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/DPMbox_interface_sketch.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPMbox design prototype
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Libraries and tools
\end_layout

\begin_layout Subsection
Version control
\begin_inset CommandInset label
LatexCommand label
name "sub:Version-control"

\end_inset


\end_layout

\begin_layout Standard
Git has been used, getting advantage of the GitHub platform.
 Git is a distributed revision control system with an emphasis on speed,
 data integrity, and support for distributed, non-linear workflows.Git was
 initially designed and developed by Linus Torvalds for Linux kernel development
 in 2005, and has since become one of the most widely adopted version control
 systems for software development.
\end_layout

\begin_layout Standard
The DPMbox source code repository can be checked (and forged!) on
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "11_valencia_calvellido_2015"

\end_inset

.
\end_layout

\begin_layout Subsection
Program languages and technologies
\begin_inset CommandInset label
LatexCommand label
name "sub:Program-languages-and"

\end_inset


\end_layout

\begin_layout Subsubsection
HTML 
\end_layout

\begin_layout Standard
HTML (Hyper Text Markup Language) is the text markup language normally used
 in World Wide Web (WWW).
 It was created by Tim Berners-Lee (former 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 researcher) in 1986 from two existing tools: the concept of hypertext and
 SGML.
 HTML allows you to define both the structure and location of the items
 displayed on a Web page and the relations between the different components
 of a Web site by using hyperlinks.
 The interpretation of HTML documents is performed by Web browsers such
 as Mozilla Firefox or Google Chrome and others.
 The interpretation may make the final presentation vary in small details.
 Therefore the development of HTML is adjusted to the maximum to the standards
 set by the W3C
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "2_w3.org_2015"

\end_inset

.
\end_layout

\begin_layout Subsubsection
CSS
\end_layout

\begin_layout Standard
The term CSS, which stands for Cascading Style Sheets, refers to the formal
 language used to define the presentation of structured documents written
 in HTML, XML and XHTML by extension.
 The World Wide Web Consortium (W3C) is the agency responsible for developing
 the specification of style sheets that serve as a standard for browsers.
 The objective of CSS is separate the structure of a Web document from its
 visual representation
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "3_w3.org_2015"

\end_inset

.
\end_layout

\begin_layout Standard
The CSS from w2ui framework has been adapted accordingly to suit the needs
 of DPMbox.
\end_layout

\begin_layout Subsubsection
JavaScript
\end_layout

\begin_layout Standard
JavaScript is a high level, dynamic, untyped, and interpreted programming
 language.
 It has been standardized in the ECMAScript language specification
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "EcmaScript"

\end_inset

.
 Alongside HTML and CSS, it is one of the three essential technologies of
 World Wide Web content production.
 The majority of websites employ it and it is supported by all modern web
 browsers without plug-ins.
 JavaScript is prototype-based with first-class functions, making it a multi-par
adigm language, supporting object-oriented, imperative, and functional programmi
ng styles.
 For this development a certain number of recommendations from Douglas Crockford
's “The Good Parts” has been followed
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "books/daglib/0020447"

\end_inset

.
 JavaScript has an API for working with text, arrays, dates and regular
 expressions, but does not include any I/O, such as networking, storage
 or graphics facilities, relying for these upon the host environment in
 which it is embedded
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "4_mozilla_developer_network_2015"

\end_inset

.
\end_layout

\begin_layout Standard
ECMAScript 6 includes interesting syntax and structural improvements but
 it was in process of approval while DPMbox was being developed, thus the
 standard followed has been ECMAScript 5.1
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "EcmaScript"

\end_inset

.
\end_layout

\begin_layout Subsubsection
jQuery
\end_layout

\begin_layout Standard
jQuery is a cross-platform JavaScript library designed to simplify the client-si
de scripting of HTML.
 jQuery is the most popular JavaScript library in use today, with installation
 on 65% of the top 10 million highest-trafficked sites on the Web
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "w3techs.com_2015"

\end_inset

.
 jQuery is free, open-source software licensed under the MIT License.
\end_layout

\begin_layout Standard
Version used in DPMbox development is version 2.1.3.
\end_layout

\begin_layout Subsubsection
w2ui
\end_layout

\begin_layout Standard
W2UI is a small JavaScript UI library with a complete set of widgets that
 covers a wide range of interface design elements: layout, grid, sidebar,
 toolbar, tabs, fields, popup and other utilities.
 It has been created by Vitali Malinouski and it is licensed under MIT license.
 Some of its features are:
\end_layout

\begin_layout Itemize
Complete w2ui library is only 69kb (minified and gziped) and provides extremely
 fast load and execution.
 It is 9 times smaller then ExtJS and 7 times smaller then Kendo UI.
 It is just a bit over the size of jQuery.
\end_layout

\begin_layout Itemize
It’s really easy to use with simple and standard API methods, JSON friendly,
 and it has a stable and good support from its main developer.
\end_layout

\begin_layout Itemize
It has no dependencies except jQuery, is all-in-one solution.
 It contains all most common UI widgets: layout, grid, sidebar, tabs, toolbar,
 popup, field controls and forms.
 No need to put together a collection of mismatched plugins or more libraries.
\end_layout

\begin_layout Itemize
The library heavily uses HTML5 and CSS3 and yet supports all major modern
 browsers.
 Latest Chrome, FireFox 7+, Safari 5+ and IE 9+ are among supported browsers.
\end_layout

\begin_layout Standard
Version used by DPMbox is version 1.4.2..
\end_layout

\begin_layout Subsubsection
XML
\end_layout

\begin_layout Standard
XML stands for eXtensible Markup Language, is a markup language developed
 by the World Wide Web Consortium (W3C) used to store data in a human readable
 form.
 It is proposed as a standard for exchanging structured information between
 different platforms.
 
\end_layout

\begin_layout Standard
WebDAV servers, which DPMbox relies on, answers all requests with XML content.
\end_layout

\begin_layout Subsubsection
JSON
\end_layout

\begin_layout Standard
JSON (JavaScript Object Notation) is an open standard format that uses human-rea
dable text to transmit data objects consisting of attribute–value pairs.
 It is the primary data format used for asynchronous browser/server communicatio
n (AJAJ), largely replacing XML (used by AJAX).
\end_layout

\begin_layout Standard
DPMbox UI uses JSON instead of XML, so the responses received from the server
 are parsed and translated to JSON format.
\end_layout

\begin_layout Subsection
Tools 
\begin_inset CommandInset label
LatexCommand label
name "sub:Tools"

\end_inset


\end_layout

\begin_layout Standard
As stated on section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Non-Human-resources"

\end_inset

, GNU/Linux Ubuntu 10.04, and also GNU/Linux Mint 17 were the OS where DPMbox
 has been developed.
\end_layout

\begin_layout Subsubsection
Apache
\end_layout

\begin_layout Standard
The Apache HTTP Server is the world's most widely used web server software.
 Originally based on the NCSA HTTPd server, development of Apache began
 in early 1995 after work on the NCSA code stalled.
 Apache played a key role in the initial growth of the World Wide Web, quickly
 overtaking NCSA HTTPd as the dominant HTTP server, and has remained most
 popular since April 1996.
 In 2009, it became the first web server software to serve more than 100
 million websites.
\end_layout

\begin_layout Standard
Version used for development has been version 2.2.14.
 On production DPM servers Apache 2.2.15 is typically used.
\end_layout

\begin_layout Subsubsection
Geany
\end_layout

\begin_layout Standard
Geany is a lightweight cross-platform GUI based text editor using Scintilla
 and GTK+, including basic Integrated Development Environment (IDE) features.
 It is designed to have short load times, with limited dependency on separate
 packages or external libraries.
 It is available for a wide range of operating systems, such as BSD, Linux,
 Mac OS X, Solaris and Windows.
 Among the supported programming languages and markup languages are C, C++,
 C#, Java, JavaScript, PHP, HTML, LaTeX, CSS, Python, Perl, Ruby, Pascal,
 Haskell, Erlang, Vala and many others.
\end_layout

\begin_layout Standard
Version used to develop DPMbox is 1.24.1.
\end_layout

\begin_layout Subsubsection
Firefox Developer Edition
\end_layout

\begin_layout Standard
Firefox Developer Edition is a version of Firefox tailored for developers,
 featuring the latest Firefox features and experimental developer tools.
 It provides easy accessibility for a wide array of developer tools which
 help in making debugging easy and help in faster and more professional
 development.
 Tools include Valence, WebIDE, Page Inspector, Web Console, JavaScript
 Debugger, Network Monitor...
\end_layout

\begin_layout Standard
Version used has been version 35.0a2.
\end_layout

\begin_layout Subsubsection
Firebug
\end_layout

\begin_layout Standard
Firebug is a free and open-source web browser extension for Mozilla Firefox
 that facilitates the live debugging, editing, and monitoring of any website's
 CSS, HTML, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DOM}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

, and JavaScript.
 Firebug is licensed under the BSD license and was initially written in
 January 2006 by Joe Hewitt, one of the original Firefox creators.
 The Firebug Working Group oversees the open source development and extension
 of Firebug.
 It has two major implementations: an extension for Mozilla Firefox and
 a bookmarklet implementation called Firebug Lite which can be used with
 Google Chrome.
 In addition to debugging web pages, Firebug is a useful tool for web security
 testing and web page performance analysis.
\end_layout

\begin_layout Standard
Versions used have been verison 1.114b1 and version 2.0.12.
\end_layout

\begin_layout Subsubsection
JSHint
\end_layout

\begin_layout Standard
JSHint is a static code analysis tool used in software development for checking
 if JavaScript source code complies with coding rules.
 It was forked from Douglas Crockford's JSLint project, as it was felt that
 the original did not allow enough customization options.
 
\end_layout

\begin_layout Standard
This tool has been used to ensured the good quality of the written code.
 It was used through Geany and Firefox Developer Edition with version used
 being version 2.4.0.
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Subsection
HTML
\end_layout

\begin_layout Subsubsection
index.html
\end_layout

\begin_layout Standard
It is actually just a container for the JavaScript generated interface.
\end_layout

\begin_layout Subsection
CSS
\end_layout

\begin_layout Subsubsection
w2ui.css
\end_layout

\begin_layout Standard
w2ui UI framework styles sheet.
\end_layout

\begin_layout Subsubsection
style.css
\end_layout

\begin_layout Standard
Some rules indicating size, font and colors for the DPMbox interface appearance
 and a slight overriding over some w2ui CSS rules to adapt them accordingly.
\end_layout

\begin_layout Subsection
JavaScript
\end_layout

\begin_layout Subsubsection
config.js
\end_layout

\begin_layout Standard
A file to store the server and other configuration values that could arise
 in the future.
\end_layout

\begin_layout Subsubsection
dpmbox-ui.js 
\end_layout

\begin_layout Standard
The user interface, constructed over the w2ui library.
 In this file we use the data obtained through jquery.dpm.js, after being
 parsed and translated to JSON by a method of jquery.dpmFilters.js.
 Considering that is a petition on the network, the way to use it is by
 taking advantage of jQuery AJAX callbacks, i.e.
 a success response.
 The listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:jquery.dpm.js---GET-usage"

\end_inset

 would represent what happens here.
\end_layout

\begin_layout Subsubsection
jquery.dpm.js 
\end_layout

\begin_layout Standard
This is the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
API
\end_layout

\end_inset

, or the library that actually communicates with the DPM server dealing
 with the HTTP/WebDAV frontend.
 Through this library we can use methods of the WebDAV standard like PROPFIND
 or MKCOL in an HTML environment and thus manage the information they provide.
 This API use XMLHttpRequest operations, also known as 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

.
 These are basically AJAX calls that perform the HTTP/WebDAV requests and
 receive the data in a JavaScript 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 object.
 An XMLHttpRequest support GET, POST, PUT, and basically any HTTP method,
 and is available in any browser, even in old ones like Internet Explorer
 6 or Firefox 3.
\end_layout

\begin_layout Standard
In
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:jquery.dpm.js---GET"

\end_inset

 we show a simplified version of the API, a GET example is shown but the
 other verbs are are implemented in a similar way, though considering some
 particularities (like the PROPFIND needing a depth parameter).
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

$.fn.extend($,{ 	
\end_layout

\begin_layout Plain Layout

	dpm: function(res) { 		
\end_layout

\begin_layout Plain Layout

		var api = function() {
\end_layout

\begin_layout Plain Layout

			this.get = function(cob) { 				
\end_layout

\begin_layout Plain Layout

				this.prepare(cob, 'GET'); 				
\end_layout

\begin_layout Plain Layout

				return this.send(cob); 			
\end_layout

\begin_layout Plain Layout

			};
\end_layout

\begin_layout Plain Layout

			this.prepare = function(cob, typ) { 				
\end_layout

\begin_layout Plain Layout

				cob = cob || {}; 				
\end_layout

\begin_layout Plain Layout

				cob.url = resourceUrl; 			
\end_layout

\begin_layout Plain Layout

				cob.headers = cob.headers || {};
\end_layout

\begin_layout Plain Layout

				cob.type = typ || 'GET'; 				
\end_layout

\begin_layout Plain Layout

				cob.dataType  = cob.dataType || 'xml'; 			
\end_layout

\begin_layout Plain Layout

			};
\end_layout

\begin_layout Plain Layout

			this.send = function(cob) { 				
\end_layout

\begin_layout Plain Layout

				lastRequest = $.ajax(cob); 				
\end_layout

\begin_layout Plain Layout

				return lastRequest; 			
\end_layout

\begin_layout Plain Layout

			};
\end_layout

\begin_layout Plain Layout

		}; 		
\end_layout

\begin_layout Plain Layout

		return new api;     
\begin_inset Caption Standard

\begin_layout Plain Layout
jquery.dpm.js - GET
\begin_inset CommandInset label
LatexCommand label
name "lis:jquery.dpm.js---GET"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

};
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Code
status open

\begin_layout Plain Layout
cob
\end_layout

\end_inset

 is the jQuery AJAX call object, in the prepare function the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DAV}
\end_layout

\end_inset

 call is built.
 There it’s needed to ensure integrity of the call object, verify the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DAV}
\end_layout

\end_inset

 method requested and set any authorization information (if necessary).
 The headers that will include that information are set by the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
SetRequestHeader
\end_layout

\end_inset

 AJAX method.
 After that, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
send
\end_layout

\end_inset

 function does the actual HTTP send through an AJAX request.
\end_layout

\begin_layout Standard
To use this API in an HTML document we just call the function needed, which
 as we have seen is basically an AJAX call that we can process if it success.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:jquery.dpm.js---GET-usage"

\end_inset

 there is an example reading an XML file and other one creating a test collectio
n: 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

// #get 
\end_layout

\begin_layout Plain Layout

$.dpm(url + 'testxml.xml').get({ 	
\end_layout

\begin_layout Plain Layout

	complete: function() { 		
\end_layout

\begin_layout Plain Layout

		console.log('#get'); 	
\end_layout

\begin_layout Plain Layout

	}, 	
\end_layout

\begin_layout Plain Layout

	success:  function(dat, stat) { 		
\end_layout

\begin_layout Plain Layout

		console.log(jQuery.dpm(dat).getNodesByTag('acl')); 	
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\begin_layout Plain Layout

//#mkcol 
\end_layout

\begin_layout Plain Layout

$.dpm(url + 'test').mkcol({ 	
\end_layout

\begin_layout Plain Layout

	complete:  function(dat, stat) { 		
\end_layout

\begin_layout Plain Layout

		console.log('#mkcol'); 	}, 	
\begin_inset Caption Standard

\begin_layout Plain Layout
jquery.dpm.js - GET usage
\begin_inset CommandInset label
LatexCommand label
name "lis:jquery.dpm.js---GET-usage"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

	async: false 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/* 
\end_layout

\begin_layout Plain Layout

 * A proper call, setting the (firstly parsed) data on the interface
\end_layout

\begin_layout Plain Layout

 * A function to refresh the grid content  
\end_layout

\begin_layout Plain Layout

 */ 
\end_layout

\begin_layout Plain Layout

function refreshContent(directory_route){     
\end_layout

\begin_layout Plain Layout

	$.dpm(server + directory_route).readFolder({         
\end_layout

\begin_layout Plain Layout

		success:    function(dat) {             
\end_layout

\begin_layout Plain Layout

			w2ui.grid.clear();             
\end_layout

\begin_layout Plain Layout

			w2ui.grid.add(dat);         },         
\end_layout

\begin_layout Plain Layout

		dataFilter: $.dpmFilters.filesDPM     
\end_layout

\begin_layout Plain Layout

	}); 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the API there are also other methods developed in order to work properly
 with the data, as seen on listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:jquery.dpm.js---Additional"

\end_inset

.
 For example to traverse the nodes received in a PROPFIND, or to select
 a specific property.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

this.getAllProperties = function(cob) { 	
\end_layout

\begin_layout Plain Layout

	cob.data = XmlHeader + '<D:propfind xmlns:D="DAV:"><D:allprop/>';
\end_layout

\begin_layout Plain Layout

	if(isArray(cob.includes)) { 		
\end_layout

\begin_layout Plain Layout

		cob.data    +=  '<D:include>';
\end_layout

\begin_layout Plain Layout

		for(var i=0; i < d.includes.length; i++) { 			
\end_layout

\begin_layout Plain Layout

			cob.body  += '<D:' + d.includes[i] + '/>'; 		
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

		cob.data    +=  '</D:include>'; 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	cob.data      += '</D:propfind>'; 	
\end_layout

\begin_layout Plain Layout

	return this.propFind(cob); 
\begin_inset Caption Standard

\begin_layout Plain Layout
jquery.dpm.js - Additional method
\begin_inset CommandInset label
LatexCommand label
name "lis:jquery.dpm.js---Additional"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

};
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
jquery.dpmFilters.js
\end_layout

\begin_layout Standard
WebDAV answers with XML data and the DPMbox interface understands JSON,
 therefore some parsers are needed, and they are located in this file.
 One of these filters can be checked on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:jquery.dpmFilters.js"

\end_inset

.
 A typical XML response of the server can be analyzed on listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:xmlresponse"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

(function($) { 
\end_layout

\begin_layout Plain Layout

	$.fn.extend($,{ dpmFilters: { 			
\end_layout

\begin_layout Plain Layout

		/* Returns an array of contained nodes not collections*/
\end_layout

\begin_layout Plain Layout

		files: function(dat) {
\end_layout

\begin_layout Plain Layout

			var davTree = [];
\end_layout

\begin_layout Plain Layout

			$.dpm(dat).seekToNode('response').eachNode(function(node_response) {
\end_layout

\begin_layout Plain Layout

				if (!$.dpm(node_response).isCollection())
\end_layout

\begin_layout Plain Layout

					davTree.push(node_response);                  					
\end_layout

\begin_layout Plain Layout

			});                  					
\end_layout

\begin_layout Plain Layout

			return davTree;              			
\end_layout

\begin_layout Plain Layout

		}          		
\end_layout

\begin_layout Plain Layout

	}});
\end_layout

\begin_layout Plain Layout

})(jQuery); 
\begin_inset Caption Standard

\begin_layout Plain Layout
jquery.dpmFilters.js
\begin_inset CommandInset label
LatexCommand label
name "lis:jquery.dpmFilters.js"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

<D:multistatus xmlns:D="DAV:" xmlns:ns0="DAV:"> 	
\end_layout

\begin_layout Plain Layout

	<D:response xmlns:lcgdm="LCGDM:" xmlns:lp3="LCGDM:" xmlns:lp1="DAV:" xmlns:lp2=
"http://apache.org/dav/props/"> 		<D:href>/dpm/cern.ch/home/dteam/aalvarez/public/
test_collection/</D:href> 		
\end_layout

\begin_layout Plain Layout

		<D:propstat> 			
\end_layout

\begin_layout Plain Layout

			<D:prop> 				
\end_layout

\begin_layout Plain Layout

				<lcgdm:type>0</lcgdm:type> 				
\end_layout

\begin_layout Plain Layout

				<lp1:resourcetype> 					
\end_layout

\begin_layout Plain Layout

					<D:collection></D:collection> 				
\end_layout

\begin_layout Plain Layout

				</lp1:resourcetype> 				
\end_layout

\begin_layout Plain Layout

				<lp1:creationdate>2015-04-04T09:51:59Z</lp1:creationdate> 				
\end_layout

\begin_layout Plain Layout

				<lp1:getlastmodified>Fri, 27 Feb 2015 18:57:50 GMT</lp1:getlastmodified>
 				
\end_layout

\begin_layout Plain Layout

				<lp3:lastaccessed>Sat, 04 Apr 2015 09:51:59 GMT</lp3:lastaccessed> 				
\end_layout

\begin_layout Plain Layout

				<lp1:getetag>5c317-54f0be2e</lp1:getetag> 				
\end_layout

\begin_layout Plain Layout

				<lp1:getcontentlength>0</lp1:getcontentlength> 				
\end_layout

\begin_layout Plain Layout

				<lp1:displayname>test_collection</lp1:displayname> 				
\end_layout

\begin_layout Plain Layout

				<lp1:iscollection>1</lp1:iscollection> 				
\end_layout

\begin_layout Plain Layout

				<lp3:guid></lp3:guid> 				
\end_layout

\begin_layout Plain Layout

				<lp3:mode>040775</lp3:mode> 				
\end_layout

\begin_layout Plain Layout

				<lp3:sumtype></lp3:sumtype> 				
\end_layout

\begin_layout Plain Layout

				<lp3:sumvalue></lp3:sumvalue> 				
\end_layout

\begin_layout Plain Layout

				<lp3:fileid>377623</lp3:fileid> 				
\end_layout

\begin_layout Plain Layout

				<lp3:status>-</lp3:status> 				
\end_layout

\begin_layout Plain Layout

				<lp3:xattr>{"type": 0, "normPath": "
\backslash
/dpm
\backslash
/cern.ch
\backslash
/home
\backslash
/dteam
\backslash
/aalvarez
\backslash
/public
\backslash
/test_collection"}</lp3:xattr> 				
\end_layout

\begin_layout Plain Layout

				<lp1:owner>3</lp1:owner> 				
\end_layout

\begin_layout Plain Layout

				<lp1:group>102</lp1:group> 			
\end_layout

\begin_layout Plain Layout

			</D:prop> 			
\end_layout

\begin_layout Plain Layout

			<D:status>HTTP/1.1 200 OK</D:status> 		
\end_layout

\begin_layout Plain Layout

		</D:propstat> 	
\end_layout

\begin_layout Plain Layout

	</D:response> 
\end_layout

\begin_layout Plain Layout

</D:multistatus>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
XML response
\begin_inset CommandInset label
LatexCommand label
name "lis:xmlresponse"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
w2ui-1.4.2.js
\end_layout

\begin_layout Standard
The main w2ui file, it has not been altered.
\end_layout

\begin_layout Section
Testing and validation
\end_layout

\begin_layout Standard
This chapter describes the tests that DPMbox has been undergoing through
 its development, whether they were manual or automated.
\end_layout

\begin_layout Subsection
Unit testing
\end_layout

\begin_layout Standard
Unit testing is a method by which individual units of source code are tested
 to determine if they are working properly.
 This is done by invoking a unit of work in the system and then checks a
 single assumption about the behavior of that unit of work.
 A unit of work could include a single method, a whole class or multiple
 classes working together to achieve one single logical purpose that can
 be verified.
\end_layout

\begin_layout Standard
In DPMbox, all the functions exposed in our DPM library fit perfectly in
 this definition, and so can be submitted to unit tests.
 For this purpose a small test suite called 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
tests.js
\end_layout

\end_inset

 was being built during the implementation phase and as new modules for
 the application were being implemented, new tests were also added and performed.
 A small portion of this file is included on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:tests"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

function tests(){
\end_layout

\begin_layout Plain Layout

	var url = config.url();
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	//#createFolder     
\end_layout

\begin_layout Plain Layout

	$.dpm(url + 'test').createFolder({         
\end_layout

\begin_layout Plain Layout

		complete:  function(dat, stat) {             
\end_layout

\begin_layout Plain Layout

		console.log('#createFolder');         
\end_layout

\begin_layout Plain Layout

		},         
\end_layout

\begin_layout Plain Layout

		async: false //Set synchronous to complete this test before the next one
     
\end_layout

\begin_layout Plain Layout

	});
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	//#remove     
\end_layout

\begin_layout Plain Layout

	$.dpm(url + 'test').remove({         
\end_layout

\begin_layout Plain Layout

		complete:  function(dat, stat) {             
\end_layout

\begin_layout Plain Layout

			console.log('#remove folder');         
\end_layout

\begin_layout Plain Layout

		},         
\end_layout

\begin_layout Plain Layout

		async: false //Set synchronous to complete this test before the next one
     
\end_layout

\begin_layout Plain Layout

	});
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
tests.js
\begin_inset CommandInset label
LatexCommand label
name "lis:tests"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Integration testing
\end_layout

\begin_layout Standard
As the name suggests, in integration testing the idea is to test how parts
 of the system work together, the integration of the parts.
 Integration tests are similar to unit tests, but the difference is that
 while unit tests are isolated from other components, integration tests
 are not.
 The purpose of integration testing is to verify that the previously independent
ly tested work units still behave as expected after assembling them.
 These assemblages (or groups of units), are exercised through their interfaces
 using black box testing, success and error cases being simulated via appropriat
e parameter and data inputs.
 
\end_layout

\begin_layout Standard
Given the DPMbox architecture, we have to test the integration between the
 connection library, the filters and the graphical interface.
 For this we have followed an approach called a “big bang” integration,
 where most of the developed modules are coupled together to form a complete
 software system or major part of the system.
 Thereby we have accomplished the integration testing by checking its associated
 functional requirement whenever a new feature was added to the system (uploadin
g a file, deleting a collection...
 and so on), in a full assembled environment for this functionality.
 
\end_layout

\begin_layout Standard
To perform these tests we have done a lot of manual testing through the
 graphical user interface in its early conceptions, and also for automating
 purposes a testing framework was used, whose name is DalekJS.
 
\end_layout

\begin_layout Standard
DalekJS is an open source UI testing tool written in JavaScript that can
 launch and automate the browser, click and follow links, capture screenshots
 or fill and submit forms.
 It works on Windows, Linux or Mac, it is easy to install, only depending
 on Node.js, it has an API as easy to use as jQuery, and it even integrates
 reporting
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "2_dalekjs.com_2015"

\end_inset

.
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
de facto
\end_layout

\end_inset

 standard Selenium was also considered but finally DalekJS was chosen given
 its simplicity, ease to use, and specially because the tests can be written
 in JavaScript and using elements selectors in the same way as jQuery does.
 By using the same language and syntax as in the development we could write
 the tests faster.
 By the way, DalekJS uses the WebDriver JSON-Wire protocol to communicate
 with the browsers it utilizes, a technology emerged from Selenium and now
 a W3 standard
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "2_webdriver_2015"

\end_inset

.
\end_layout

\begin_layout Standard
In the listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:tests-Dalek"

\end_inset

 an example of DalekJS in use can be seen.
 In this small test we connect to a storage demo site, then as the default
 interface is the old one we click on the link to set DPMbox, we wait for
 the body to get loaded and after that we assert that a file that we expect
 to be there (ape.jpg), has been read indeed.
 We use a selector in jQuery style checking that the row in the w2ui grid
 with id corresponding to our file has been created, this id has a fixed
 format including the file path.
 In listing
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lis:tests-Dalek-output"

\end_inset

 you can see the output of running this test using the headless browser
 PhantomJS
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_phantomjs.org_2015"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

module.exports = { 
\end_layout

\begin_layout Plain Layout

	'DPMbox initial read test': function (test) {
\end_layout

\begin_layout Plain Layout

	test 		
\end_layout

\begin_layout Plain Layout

		.open('http://federation.desy.de/fed/dynafeds_demo/') 		
\end_layout

\begin_layout Plain Layout

		.click('a[href="javascript:setNewUI();"]') 		
\end_layout

\begin_layout Plain Layout

		.waitForElement('body') 		
\end_layout

\begin_layout Plain Layout

		.assert.exists('#grid_grid_rec_
\backslash

\backslash
/fed
\backslash

\backslash
/dynafeds_demo
\backslash

\backslash
/ape
\backslash

\backslash
.jpg','the file ape.jpg has been read') 		
\end_layout

\begin_layout Plain Layout

		.done(); 	
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}; 
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
DalekJS test
\begin_inset CommandInset label
LatexCommand label
name "lis:tests-Dalek"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Plain Layout

Running tests 
\end_layout

\begin_layout Plain Layout

Running Browser: PhantomJS 
\end_layout

\begin_layout Plain Layout

OS: linux 64bit 
\end_layout

\begin_layout Plain Layout

Browser Version: 1.9.8
\end_layout

\begin_layout Plain Layout

RUNNING TEST - "DPMbox initial read test" 
\end_layout

\begin_layout Plain Layout

> OPEN http://federation.desy.de/fed/dynafeds_demo/ 
\end_layout

\begin_layout Plain Layout

> CLICK a[href="javascript:setNewUI();"] 
\end_layout

\begin_layout Plain Layout

> WAITFORELEMENT  
\end_layout

\begin_layout Plain Layout

v EXISTS the file ape.jpg has been read 
\end_layout

\begin_layout Plain Layout

v 1 Assertions run 
\end_layout

\begin_layout Plain Layout

v TEST - "DPMbox initial read test" SUCCEEDED
\end_layout

\begin_layout Plain Layout

1/1 assertions passed.
 Elapsed Time: 10.46 sec  
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
DalekJS output
\begin_inset CommandInset label
LatexCommand label
name "lis:tests-Dalek-output"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
System testing
\end_layout

\begin_layout Standard
Once we know that each part of the system is correctly assembled, we can
 take another step.
 System testing is the type of testing to check the behaviour of a complete
 and fully integrated software product based on the software requirements
 specification.
 The main focus of this testing is to evaluate how the software will behave
 in its actual use, with the end-user requirements in mind (thereby including
 functional and non-functional requirements).
\end_layout

\begin_layout Standard
Like we have faced the integration testing, we accomplished the system testing
 by checking every functional requirement again, this time not only on a
 completely assembled environment for each functionality but in a mature
 system in its final development stages.
 
\end_layout

\begin_layout Standard
And also, given that the system could be considered near to its completion,
 we have to test the non-functional requirements too, like its performance.
\end_layout

\begin_layout Subsubsection
Security tests
\end_layout

\begin_layout Standard
DPMbox must be a secure system, this is underwritten by the non-functional
 requirement NRQ-2.
 As the system relies on the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 security, DPMbox responsibility is to be protected from attacks being made
 through it, e.g.
 code injection attacks.
\end_layout

\begin_layout Standard
It is well known that the web technology has a dangerous feature: it allows
 data and code to be mixed together, i.e.
 when a string containing both data and code is processed by the web technology,
 the code can be identified and sent to the JavaScript engine for execution.
 This feature is made by design, so JavaScript code can be embedded freely
 inside HTML pages.
 Unfortunately, the consequence of this feature is that if developers just
 want to process data but use the wrong APIs, the code in the mixture can
 be automatically and mistakenly triggered.
 If such a data-and-code mixture comes from an untrustworthy place, malicious
 code can be injected and executed inside the application.
 A special type of this attack is called Cross-Site Scripting (XSS), which,
 according to the OWASP top-ten list, is currently the third most common
 security risk in web applications
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "OWASP:2013"

\end_inset

.
\end_layout

\begin_layout Standard
To avoid this, all inputs in DPMbox are encoded and sanitized through a
 function getting advantage of the browser's built-in functionality.
 Encoding is the act of escaping user input so that the browser interprets
 it only as data, not as code.
\end_layout

\begin_layout Subsubsection
Cross-browser compatibility
\end_layout

\begin_layout Standard
The non-functional requirement NRQ-6 states that the platform can’t be restricte
d to particular operating systems and/or web browsers, so we needed to test
 that DPMbox is accessible from different platforms.
\end_layout

\begin_layout Standard
For this purpose the tool BrowserStack has been used (
\begin_inset CommandInset href
LatexCommand href
name "browserstack.com"
target "http://www.browserstack.com"

\end_inset

).
 It is a cross-browser testing tool, to test public websites and protected
 servers, on a cloud infrastructure of desktop and mobile browsers.
 Websites can be tested interactively, or through the use of Selenium or
 JavaScript automated test suites.
 The features include 700+ real browsers, local testing, screenshots, responsive
 tests or developer tools.
\end_layout

\begin_layout Standard
After the use of this tool we can assure that DPMbox can be accessed through
 these browsers at different resolutions on any operating system they are
 running:
\end_layout

\begin_layout Itemize
Google Chrome/Chromium, any version higher than v17
\end_layout

\begin_layout Itemize
Mozilla Firefox, starting on version 7
\end_layout

\begin_layout Itemize
Apple Safari, a more recent version than release 5
\end_layout

\begin_layout Itemize
Microsoft Internet Explorer, version 9 onwards
\end_layout

\begin_layout Subsubsection
Code quality
\end_layout

\begin_layout Standard
In terms of maintainability and extensibility, our code has enough explanatory
 comments, follows a clean structure and it has been built modularly.
 Though this is hard to prove conclusively, another cornerstone to satisfy
 these requirements is to rely on a correct code syntax, something that
 can be effectively verified automatically.
 Hence, the DPMbox source code quality has been checked by using an automatic
 verification tool, which checks that the code complies with the naming
 conventions, syntax, and other recommendation standards.
 The tool is called JSHint, a fork from Douglas Crockford's JSLint project,
 as it was felt that the original did not allow enough customization options
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "JSLint_7355524"

\end_inset

.
\end_layout

\begin_layout Subsection
Acceptance testing
\end_layout

\begin_layout Standard
Acceptance tests are intended to verify that the application is stable for
 the deployment on production environment.
 To prove that the product was ready for the move to production, similar
 tests to the ones described before were performed, but this time on some
 of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 team test servers.
 
\end_layout

\begin_layout Standard
Particularly, the DPM team checked DPMbox behaviour with big collections,
 the directories with 10k and 100k files.
 The system takes a while to load, but then goes softly and can cope reasonably
 well with 100k entries, and you can even apply the sorting or the filtering.
 However with this kind of directories, sometimes the memory consumption
 went very very high for some time (up to a gigabyte) and then fell back
 to ∼500MB, something that could be problematic.
 This can also happen with the standard WebDAV/HTTP interface or connecting
 through a WebDAV client, since this is something inherent with this enormously
 big number of files in the collection.
 Anyhow, a solution for this is proposed as future work, DPMbox can detect
 when the collection has a lot of files and alert the user before reading
 the collection completely asking if he wants to continue.
\end_layout

\begin_layout Chapter
Conclusions and future work
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusions-and-future"

\end_inset

 
\end_layout

\begin_layout Standard
In this chapter we present what we think that are the main contributions
 of this work and some conclusions and achievements about what has been
 done.
 We also sketch a few ideas about the future of DPMbox and how to improve
 it.
\end_layout

\begin_layout Section
Contribution
\end_layout

\begin_layout Standard
The main benefit provided with this development is the introduction of a
 new interface for the Disk Pool Manager system.
 With it the users can work with their data stored in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 grid elements in a manner that is straight forward for unexperienced users
 and convenient for all.
\end_layout

\begin_layout Standard
DPMbox is a project emerged from a real and specific need and, if we check
 the initial proposal and the system objectives in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Objectives-and-scope"

\end_inset

 and
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:System-objectives"

\end_inset

, after the development process, we can say that the project has achieved
 those goals.
 
\end_layout

\begin_layout Standard
DPMbox can connect and interact with a WebDAV server correctly (so it can
 be used to get a simple but effective interface in any WebDAV server),
 it covers all the main functionality in a straight forward way, and it
 is properly integrated into the DPM environment.
 Being more specific, DPMbox can upload, download or remove files, and create,
 read or delete collections, and since it can accomplish this taking care
 of the non-functional requirements too, we can say that DPMbox has been
 a successful project.
 
\end_layout

\begin_layout Standard
Besides that, another DPMbox contribution is the implementation of an independen
t communication library.
 The proposed architecture, modular and decoupled into the pure graphical
 part and its data communication component, provides some advantages.
 It allows the extension of the interface by adding new features, or gives
 the possibility that a front-end engineer could envision a different interface
 proposal integrating just the DPMbox communications library.
\end_layout

\begin_layout Standard
After its development process, this new interface implementation is already
 in use in the Disk Pool Manager, it is available to download and install
 from repositories for Fedora 22 and Fedora 23, and through testing repositories
 for EL-5, EL-6 and EL-7, and we aim to have regular updates with fixes
 and new functionalities.
\end_layout

\begin_layout Subsection
Lessons learned
\end_layout

\begin_layout Standard
Considering that the project itself has met its own objectives, the other
 goals, or as we can say, the transversal objectives of the project, has
 far exceeded my expectations.
 On a strictly personal level, the work on this project has been an exciting
 journey.
 It is comforting to face a project of this nature and even get to know
 the place where the World Wide Web was born.
 
\end_layout

\begin_layout Standard
In the learning aspect, this project has been a really useful JavaScript
 training ground for me.
 I can say that I have deepened and strengthened my knowledge in JavaScript
 and the main web development technologies (HTML, CSS), and more specifically
 in user interface creation, enough to face any future front-end development.
 I have also got a great practice handling external libraries and frameworks
 as well as understanding its documentation and integrating them into a
 project.
 
\end_layout

\begin_layout Standard
And beyond that, the list of things that this project has brought me is
 long: 
\end_layout

\begin_layout Itemize
I got the opportunity to collaborate with an international work team, and
 by extension with the exciting work done in a research center like 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
I have learned to organize and plan a project, and to stick to a schedule.
\end_layout

\begin_layout Itemize
The project has faced me to make decisions, like the chosen technology or
 the architecture to use.
 
\end_layout

\begin_layout Itemize
I have gained knowledge in how to build an ​​architecture, and in the use
 of tools and patterns that are often used for professional development.
\end_layout

\begin_layout Itemize
I have learned the importance that a well documented and organized source
 code has in its future evolution.
\end_layout

\begin_layout Itemize
I have been able to get feedback of other developers and users, and to share
 ideas of the development future direction.
 It is really thrilling, and you learn a lot, watching someone external
 using your product for the first time.
\end_layout

\begin_layout Itemize
This project gave me enough confidence to face future projects that need
 to meet the real requirements of users.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
One thing that I probably might need to improve for the future is the ability
 to get a better abstraction of a whole system, especially in systems so
 complex as the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 and the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{WLCG}
\end_layout

\end_inset

.
 Sometimes the vast complexity of the entire system can dissuade you from
 a detail-less vision needed to focus on what really matters for your project.
\end_layout

\begin_layout Standard
Summarizing, acquiring a basic competence in all the involved technologies
 was a major challenge, and it has not been easy to deal with the various
 unknown concepts concerning the system's environment.
 Furthermore, some setbacks appeared in different phases along the development
 process, but finally, I am really pleased with the obtained result and
 the process to get there.
 This project has made me grow as a person, student and professional.
\end_layout

\begin_layout Section
CUSL awarded
\end_layout

\begin_layout Standard
As a free software project, DPMbox has been since the beginning an active
 partaker in the ninth edition of the “Concurso Universitario de Software
 Libre” (CUSL, Free Software University Contest).
 You can check some milestones on the project's Gantt chart on page
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand pageref
reference "fig:gantt"

\end_inset

.
 For its evaluation, the development blog
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "9_valencia_calvellido_2015"

\end_inset

 has been covering the project evolution.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/CUSL_logo.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
IX CUSL logo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The CUSL is a contest of free software/hardware development and free technical
 documentation.
 It is an initiative somewhat similar to the Google Summer of Code, but
 specifically aimed to the spanish university and high school students,
 and organized by a group of free software university offices.
 Its main objective is to encourage the creation and contribute to the consolida
tion of the free software community at university.
 After nine editions, more than 700 projects and a thousand students have
 took part through the years.
 
\end_layout

\begin_layout Standard
This year the closing event, where finalist participants showcases their
 projects, was held in Zaragoza on May 7th and 8th.
 And finally, after all the competition process, in its ninth edition DPMbox
 was awarded with a first prize, being considered the Best Web Project
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_concursosoftwarelibre.org_2015"

\end_inset

 by the evaluation committee
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "2_concursosoftwarelibre.org_2015"

\end_inset

.
\end_layout

\begin_layout Section
Future work
\end_layout

\begin_layout Standard
This 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{TFG}
\end_layout

\end_inset

 ends but the DPMbox development continues.
 As a free/libre open source software development, licensed by the Apache
 license, the future development might be interesting, and I will keep contribut
ing to it.
 
\end_layout

\begin_layout Standard
One of the most interesting and feasible improvements would be adding ROOT
 files support.
 ROOT is a modular scientific software framework that provides all the functiona
lities needed to deal with big data processing, statistical analysis, visualizat
ion and storage
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_root.cern.ch_2015"

\end_inset

.
 It is developed by 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CERN}
\end_layout

\end_inset

 and is used by almost all experiments throughout High Energy and Nuclear
 Physics to write, read and analyze data, but it is also used in other applicati
ons such as astronomy and data mining.
 ROOT provides a machine-independent compressed binary format, including
 both the data and its description.
 These files can be structured into internal ‘directories’, and the directories
 may contain other directories.
 There is a project called JsROOT that intends to implement ROOT graphics
 for web browsers, and reading of binary files is supported
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1742-6596-396-5-052011"

\end_inset

.
 An example of this in action is shown on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:JsROOT-example"

\end_inset

.
 Adding ROOT files support to DPMbox might be very useful and it can be
 achieved through this project.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/JsROOT.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
JsROOT example
\begin_inset CommandInset label
LatexCommand label
name "fig:JsROOT-example"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In terms of improvements and bugs, after receiving some external feedback
 from the DPM team, there is already a number of issues opened on the DPMbox
 repository (
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/calvellido/DPMbox/issues"

\end_inset

).
 The list of things to be addressed includes: 
\end_layout

\begin_layout Itemize
Renaming, for files and collections.
 For files, this should be feasible through a 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
MOVE
\end_layout

\end_inset

 into the same location.
 
\end_layout

\begin_layout Itemize
Show extended information about a collection.
\end_layout

\begin_layout Itemize
Offer more information about the files.
 Also giving the possibility to show that information on the right panel,
 like it happens for collections.
\end_layout

\begin_layout Itemize
Implement a better system for uploads, and also for downloads.
 Sort of an upload/download manager including, for example, a progress bar.
\end_layout

\begin_layout Itemize
Improve the error message pop-ups to the final user, trying to show more
 information or being less technical.
\end_layout

\begin_layout Itemize
Give the user some configuration options (as sizes or data fields), going
 towards a more customizable interface.
\end_layout

\begin_layout Itemize
Show the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lcgdm-dav
\end_layout

\end_inset

 package version that the system is using.
 This is something already implemented in the old interface and it could
 be very useful for systems maintenance and testing.
\end_layout

\begin_layout Itemize
Add a huge directory alert.
 In the DPM network some directories might contain an enormously number
 of files (up to hundreds of thousands), so it would be good to warn the
 user before opening a collection like this.
 
\end_layout

\begin_layout Standard
And also, though not being something particularly necessary for DPM, it
 would be interesting to:
\end_layout

\begin_layout Itemize
Implement versioning and locks support.
 Offer the possibility to access files versions or even revert to a previous
 version, and delete them.
 It could be a good addition the possibility to see which file is locked
 for editing by other users.
 
\end_layout

\begin_layout Itemize
Add the functionality to drag & drop a file from your local file system.
 With latest HTML5 standards and browser features this should not be something
 complicated to implement.
\end_layout

\begin_layout Chapter
Acknowledgements
\begin_inset CommandInset label
LatexCommand label
name "chap:Acknowledgements"

\end_inset


\end_layout

\begin_layout Standard
First of all, this work could not exist without free software and the free
 software community.
 I am thankful for the contributors who dedicate their time and efforts
 to enable people from around the world to use, study, share and improve
 free software.
 Cheers for all the advocates out there that still think the world could
 be a better place through this.
\end_layout

\begin_layout Standard
I want to say thanks to all the people involved at CUSL, for their work
 and and the efforts dedicated to maintain such an interesting initiative
 through all these years.
 I also want to say thanks to the CERN IT-SDC-ID section and the DPM team
 for the help and the feedback.
\end_layout

\begin_layout Standard
I want to thank my supervisors, Manuel Palomo Duarte and Alejandro Álvarez
 Ayllón, for helping and advising me all this time, and for giving me this
 unforgettable opportunity to contribute to global knowledge (even if it
 is with this very minimal and humble contribution).
\end_layout

\begin_layout Standard
And last but foremost: 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Gracias, a mis padres en particular, porque por ellos he llegado hasta aquí,
 y a mi familia en general, por apoyarme siempre en la persecución de mis
 sueños.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
appendix
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Installation manual
\begin_inset CommandInset label
LatexCommand label
name "chap:Installation-manual"

\end_inset


\end_layout

\begin_layout Standard
Installation instructions and some recommendations to set a Disk Pool Manager
 instance are listed below.
\end_layout

\begin_layout Section
DPM installation
\end_layout

\begin_layout Subsection
Installing Scientific Linux 6 
\end_layout

\begin_layout Standard
Image: 
\begin_inset CommandInset href
LatexCommand href
name "linuxsoft.cern.ch/cern/slc6X/iso/SLC_6.6_x86_64_dvd.iso"
target "http://linuxsoft.cern.ch/cern/slc6X/iso/SLC_6.6_x86_64_dvd.iso"
type "file:"

\end_inset


\end_layout

\begin_layout Itemize
Install new system
\end_layout

\begin_layout Itemize
Follow the installer instructions
\end_layout

\begin_layout Itemize
Choose 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Basic Server / Customize Later
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wait ⌚
\end_layout

\begin_layout Itemize
Reboot, then the system will be updated
\end_layout

\begin_layout Itemize
Please wait again ⌚
\end_layout

\begin_layout Itemize
It is a good idea to redirect local port 2222 to the port 22 of the virtual
 machine (so you get SSH connection)
\end_layout

\begin_layout Subsection
Installing DPM manually
\end_layout

\begin_layout Standard
DPMbox is already on repositories (please check its status as of September
 2015 in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:lcgdm-dav_status"

\end_inset

), just in case you want to use the latest version of the packages at the
 moment you can add the continuous build repository.
\end_layout

\begin_layout Subsubsection
Repository
\end_layout

\begin_layout Verbatim
wget http://svn.cern.ch/guest/lcgdm/extras/build/repos/lcgdm-cbuilds-el6.repo
\end_layout

\begin_layout Verbatim
-P /etc/yum.repos.d
\end_layout

\begin_layout Subsubsection
Install DPM
\end_layout

\begin_layout Standard
Packages
\end_layout

\begin_layout Verbatim
yum install lcgdm-dav-server dmlite-plugins-adapter dpm-server-mysql
\end_layout

\begin_layout Verbatim
dpm-name-server-mysql dpm
\end_layout

\begin_layout Subsubsection
Install MySQL
\end_layout

\begin_layout Verbatim
yum install mysql-server
\end_layout

\begin_layout Verbatim
chkconfig mysqld on
\end_layout

\begin_layout Verbatim
service mysqld start
\end_layout

\begin_layout Subsubsection
Create the tables and the user
\end_layout

\begin_layout Verbatim
mysql < /usr/share/lcgdm/create_dpns_tables_mysql.sql 
\end_layout

\begin_layout Verbatim
mysql < /usr/share/lcgdm/create_dpm_tables_mysql.sql 
\end_layout

\begin_layout Verbatim
mysql 
\end_layout

\begin_layout Verbatim
	grant all on cns_db.* to dpmmgr@localhost identified by 'dpmmgr';
\end_layout

\begin_layout Verbatim
	grant all on dpm_db.* to dpmmgr@localhost identified by 'dpmmgr';
\end_layout

\begin_layout Subsubsection
Generate a grid security certificate
\end_layout

\begin_layout Verbatim
cd /etc/grid-security
\end_layout

\begin_layout Verbatim
openssl genrsa -out hostkey.pem 1024 
\end_layout

\begin_layout Verbatim
chmod 0400 hostkey.pem
\end_layout

\begin_layout Verbatim
openssl req -new -key hostkey.pem -out hostreq.csr -subj "/DC=es/CN=`hostname
 -f`" 
\end_layout

\begin_layout Verbatim
openssl x509 -req -days 365 -in hostreq.csr -signkey hostkey.pem -out hostcert.pem
 
\end_layout

\begin_layout Verbatim
mkdir dpmmgr
\end_layout

\begin_layout Verbatim
cp hostkey.pem dpmmgr/dpmkey.pem 
\end_layout

\begin_layout Verbatim
cp hostcert.pem dpmmgr/dpmcert.pem 
\end_layout

\begin_layout Verbatim
chown dpmmgr.dpmmgr dpmmgr/*
\end_layout

\begin_layout Subsubsection
Trust this new certificate as CA
\end_layout

\begin_layout Verbatim
mkdir /etc/grid-security/certificates 
\end_layout

\begin_layout Verbatim
cd /etc/grid-security/certificates 
\end_layout

\begin_layout Verbatim
cp ../hostcert.pem myca.pem 
\end_layout

\begin_layout Verbatim
ln -s myca.pem $( openssl x509 -hash -noout -in myca.pem )".0"
\end_layout

\begin_layout Subsubsection
Trick the DNS tables
\end_layout

\begin_layout Standard
In /etc/hosts, add your host and host.domain to the end of the list for 127.0.0.1
 y ::1
\end_layout

\begin_layout Subsubsection
Configure DPM y DPNS
\end_layout

\begin_layout Standard
Change /etc/sysconfig/dpm setting this value:
\end_layout

\begin_layout Verbatim
DPNS_HOST=`hostname` 
\end_layout

\begin_layout Standard
Create/etc/NSCONFIG and add:
\end_layout

\begin_layout Verbatim
dpmmgr/dpmmgr@localhost 
\end_layout

\begin_layout Standard
Create/etc/DPMCONFIG and add:
\end_layout

\begin_layout Verbatim
dpmmgr/dpmmgr@localhost
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Then:
\end_layout

\begin_layout Verbatim
groupadd dpmmgr && useradd -g dpmmgr dpmmgr 
\end_layout

\begin_layout Standard
Set in /etc/shift.conf: 
\end_layout

\begin_layout Verbatim
DPM
\begin_inset space ~
\end_inset

TRUST host.domain
\begin_inset Newline newline
\end_inset

DPNS
\begin_inset space ~
\end_inset

TRUST host.domain
\begin_inset Newline newline
\end_inset

RFIOD
\begin_inset space ~
\end_inset

TRUST host.domain
\begin_inset Newline newline
\end_inset

RFIOD
\begin_inset space ~
\end_inset

WTRUST host.domain
\begin_inset Newline newline
\end_inset

RFIOD
\begin_inset space ~
\end_inset

RTRUST host.domain
\begin_inset Newline newline
\end_inset

RFIOD
\begin_inset space ~
\end_inset

XTRUST host.domain
\begin_inset Newline newline
\end_inset

RFIOD
\begin_inset space ~
\end_inset

FTRUST host.domain
\end_layout

\begin_layout Verbatim

\end_layout

\begin_layout Verbatim
export DPNS_HOST=localhost
\end_layout

\begin_layout Verbatim
export DPM_HOST=localhost - service dpnsdaemon restart - service dpm restart
\end_layout

\begin_layout Subsubsection
Validate
\end_layout

\begin_layout Verbatim
dpns-ls
\end_layout

\begin_layout Verbatim
dpm-qryconf
\end_layout

\begin_layout Standard
If you see no message at all, everything is ok.
\end_layout

\begin_layout Subsubsection
Load on startup
\end_layout

\begin_layout Verbatim
chkconfig dpnsdaemon on 
\end_layout

\begin_layout Verbatim
chkconfig dpm on
\end_layout

\begin_layout Subsubsection
Add a base
\end_layout

\begin_layout Standard
Create directory:
\end_layout

\begin_layout Verbatim
dpns-mkdir -p /dpm/domain/home/public 
\end_layout

\begin_layout Verbatim
dpns-chmod 0777 /dpm/domain/home/public
\end_layout

\begin_layout Standard
Create a place where files can be hosted:
\end_layout

\begin_layout Verbatim
dpm-addpool --poolname default --def_filesize 100M 
\end_layout

\begin_layout Verbatim
mkdir /storage 
\end_layout

\begin_layout Verbatim
chown dpmmgr.dpmmgr /storage 
\end_layout

\begin_layout Verbatim
dpm-addfs --poolname default --server host.domain --fs /storage/ 
\end_layout

\begin_layout Verbatim
dpm-qryconf
\end_layout

\begin_layout Subsubsection
Configure DAV
\end_layout

\begin_layout Verbatim
cd /etc/httpd/conf/ 
\end_layout

\begin_layout Verbatim
	Modificar httpd.conf 
\end_layout

\begin_layout Verbatim
	User dpmmgr 
\end_layout

\begin_layout Verbatim
	Group dpmmgr 
\end_layout

\begin_layout Verbatim
	Elimina o comenta las líneas 
\end_layout

\begin_layout Verbatim
		LoadModule dav_module modules/mod_dav.so 
\end_layout

\begin_layout Verbatim
		LoadModule dav_fs_module modules/mod_dav_fs.so 
\end_layout

\begin_layout Verbatim
cd /etc/httpd/conf.d/ 
\end_layout

\begin_layout Verbatim
	rm -f ssl.conf welcome.conf zgridsite.conf 
\end_layout

\begin_layout Verbatim
	En zlcgdm-dav.conf 
\end_layout

\begin_layout Verbatim
		SSLVerifyClient require => SSLVerifyClient optional 
\end_layout

\begin_layout Verbatim
		NSSecureRedirect Off 
\end_layout

\begin_layout Verbatim
		Añade Write to DiskFlags y NSFlags 
\end_layout

\begin_layout Verbatim
		NSRedirectPort 8080 4443 (puertos expuestos al exterior) service httpd
 restart
\end_layout

\begin_layout Standard
Configure the firewall to ports 443 and 80 and that should be all.
 
\end_layout

\begin_layout Standard
If you are setting this machine on a virtual system, add a redirection from
 443 to 4443 and from 80 a 8080, also you can relax the security directives
 disabling the firewall:
\end_layout

\begin_layout Verbatim
service iptables stop / chkconfig iptables off
\end_layout

\begin_layout Standard
Or deactivating selinux:
\end_layout

\begin_layout Verbatim
setenforce 0 
\end_layout

\begin_layout Verbatim
vim /etc/selinux/config SELINUX=permissive
\end_layout

\begin_layout Standard
From an external machine accessing 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
https://localhost:8080/dpm/
\end_layout

\end_inset

 something should appear now.
 
\end_layout

\begin_layout Section
DPMbox installation
\end_layout

\begin_layout Standard
DPMbox is included on build 0.16.0-1 of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lcgdm-dav
\end_layout

\end_inset

, on RPM repositories, as of September 2015 it is on testing channel for
 EPEL 5, 6, 7 and on stable for Fedora 22 and 23.
 This can be checked on
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:lcgdm-dav_status"

\end_inset

 
\end_layout

\begin_layout Standard
This update can be installed with the "yum" update program.
 Use su -c '
\begin_inset Flex Code
status open

\begin_layout Plain Layout
yum update lcgdm-dav
\end_layout

\end_inset

' at the command line.
 For more information, refer to "Managing Software with yum", available
 at 
\begin_inset CommandInset href
LatexCommand href
target "http://docs.fedoraproject.org/yum/"

\end_inset

.
\end_layout

\begin_layout Chapter
Developer manual
\begin_inset CommandInset label
LatexCommand label
name "chap:Developer-manual"

\end_inset


\end_layout

\begin_layout Section
DPM server environment
\end_layout

\begin_layout Standard
It is recommended to test DPMbox against a proper DPM machine.
 You can install a DPM instance following the guide above:
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Installation-manual"

\end_inset

.
\end_layout

\begin_layout Standard
When installed DPMbox files will be located on the path:
\end_layout

\begin_layout Verbatim
/usr/share/lcgdm-dav/lcgdm-dav/DPMbox/
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Also you can download last DPMbox version from its code repository address
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "11_valencia_calvellido_2015"

\end_inset

.
 Be aware that you should not touch the server and root parameters in the
 config.js file as they will be obtained automatically from the location
 (those lines on config.js will be already set).
 
\end_layout

\begin_layout Section
WebDAV server environment
\end_layout

\begin_layout Standard
You may encounter problems setting an instance of DPM running.
 In that case you can still dig into DPMbox by testing it on a WebDAV server.
 You only need an Apache server and a couple of modules.
\end_layout

\begin_layout Standard
Follow your system recommendations to install Apache server.
 The WebDAV modules 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mod_dav
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
mod_dav_fs
\end_layout

\end_inset

 are bundled with any version of Apache ≥ 2.0
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "apache_mod_dav"

\end_inset


\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "apache_mod_dav_fs"

\end_inset

, so enable them, and then indicate Apache where the WebDAV filesystem will
 be hosted on your system.
 
\end_layout

\begin_layout Standard
These operations could vary from system to system, but the following are
 guide steps to install a WebDAV server on a Linux Debian based system
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "install_webdav"

\end_inset

.
 For other OS some instructions will be very similar, even identical:
\end_layout

\begin_layout Subsection
Install Apache
\end_layout

\begin_layout Standard
Our implementation of WebDAV will be established on Apache through the use
 of the WebDAV module.
\end_layout

\begin_layout Standard
First, you will need to install Apache from Ubuntu's default repositories.
\end_layout

\begin_layout Verbatim
sudo apt-get update
\end_layout

\begin_layout Verbatim
sudo apt-get install apache2
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
You now have a fully functioning web server installed.
 It should be accessible already by navigating to your server's IP address
 in a web browser.
 
\end_layout

\begin_layout Subsection
Enable WebDAV
\end_layout

\begin_layout Standard
Apache has built-in support for WebDAV with a few modules.
 We simply have to enable them to get access to their functions.
\end_layout

\begin_layout Standard
Enable the WebDAV modules with the following two commands:
\end_layout

\begin_layout Verbatim
sudo a2enmod dav
\end_layout

\begin_layout Verbatim
sudo a2enmod dav_fs
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
We now need to restart the server to implement the changes:
\end_layout

\begin_layout Verbatim
sudo service apache2 restart
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
WebDAV as a functionality is now enabled, but we still haven't configured
 it correctly yet for our server.
 
\end_layout

\begin_layout Subsection
Create the FileSystem
\end_layout

\begin_layout Standard
We will create a directory that will house our WebDAV file content.
\end_layout

\begin_layout Standard
The default document root of the Apache server on Ubuntu is located at 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
/var/www
\end_layout

\end_inset

.
 However, we will be creating an alias, which will allow us to keep our
 directory content elsewhere.
\end_layout

\begin_layout Standard
In this guide, we will place our WebDAV content at 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
/webdav/
\end_layout

\end_inset


\end_layout

\begin_layout Verbatim
sudo mkdir /webdav
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Give the web user, which is 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
www-data
\end_layout

\end_inset

, ownership of the new directory, so that it can serve content correctly:
\end_layout

\begin_layout Verbatim
sudo chown www-data /webdav
\end_layout

\begin_layout Subsection
Set Up Password Protection
\end_layout

\begin_layout Standard
We can create an authentication procedure for accessing the directory content
 by creating an 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
htpasswd
\end_layout

\end_inset

 file.
\end_layout

\begin_layout Standard
We will place it outside of the content directory so it will not be accessible
 to users of our system.
 Create a username within the command call and you will be prompted for
 an associated password:
\end_layout

\begin_layout Verbatim
sudo htpasswd -c /etc/apache2/webdav.password username
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Right now, anybody can view the username and hashed password in the file.
 We will assign group ownership of the file to www-data and then lock down
 the permissions for everyone else:
\end_layout

\begin_layout Verbatim
sudo chown root:www-data /etc/apache2/webdav.password 
\end_layout

\begin_layout Verbatim
sudo chmod 640 /etc/apache2/webdav.password
\end_layout

\begin_layout Subsection
Configure Apache
\end_layout

\begin_layout Standard
Now, we will have to configure access to our content directory and tell
 Apache to use the WebDAV modules to serve that location.
 We will also have to note the authentication scheme we have created.
\end_layout

\begin_layout Standard
Edit the main virtual host configuration with root privileges:
\end_layout

\begin_layout Verbatim
sudo nano /etc/apache2/sites-available/default
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Here, our web content is served out of /var/www like normal.
 We will add some information that will allow Apache to treat content in
 our new directory as WebDAV material.
\end_layout

\begin_layout Standard
Below the directory listings, we will add an alias directive to tell Apache
 that requests for "/webdav" should be served out of the /webdav directory
 we created.
\end_layout

\begin_layout Standard
We will then add options to allow authentication using the methods we establishe
d.
\end_layout

\begin_layout Verbatim
.
 .
 .
 
\end_layout

\begin_layout Verbatim
.
 .
 .
 
\end_layout

\begin_layout Verbatim
<Directory /var/www/> 
\end_layout

\begin_layout Verbatim
	Options Indexes FollowSymLinks MultiViews 
\end_layout

\begin_layout Verbatim
	AllowOverride None 
\end_layout

\begin_layout Verbatim
	Order allow,deny 
\end_layout

\begin_layout Verbatim
	allow from all 
\end_layout

\begin_layout Verbatim
</Directory>
\end_layout

\begin_layout Verbatim

\end_layout

\begin_layout Verbatim
Alias /webdav /webdav
\end_layout

\begin_layout Verbatim

\end_layout

\begin_layout Verbatim
<Location /webdav> 
\end_layout

\begin_layout Verbatim
	Options Indexes 
\end_layout

\begin_layout Verbatim
	DAV On AuthType Basic AuthName "webdav" 
\end_layout

\begin_layout Verbatim
	AuthUserFile /etc/apache2/webdav.password 
\end_layout

\begin_layout Verbatim
	Require valid-user 
\end_layout

\begin_layout Verbatim
</Location>
\end_layout

\begin_layout Verbatim
.
 .
 .
 
\end_layout

\begin_layout Verbatim
.
 .
 .
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Save and close the file.
\end_layout

\begin_layout Standard
Restart Apache with the following command:
\end_layout

\begin_layout Verbatim
sudo service apache2 restart
\end_layout

\begin_layout Subsection
Test the Results
\end_layout

\begin_layout Standard
You can test the results of you configuration first in a web browser, and
 then in a WebDAV client.
 
\end_layout

\begin_layout Subsubsection
Web Browser Test
\end_layout

\begin_layout Standard
To test that your authentication is working correctly, navigate to your
 server's IP address or domain name using a web browser.
\end_layout

\begin_layout Standard
You should see the default Apache index.html file:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/ApacheItWorks.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Apache default index file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This demonstrates that the regular web functionality is working.
\end_layout

\begin_layout Standard
Now, navigate to your IP address or domain name followed by "/webdav":
\end_layout

\begin_layout Verbatim
your_IP_address_or_domain/webdav
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
You should be prompted for the username and password combination you set
 up earlier.
 Afterwards, you should see an empty directory listing:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/EmptyWebDAV.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Empty WebDAV
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We don't have currently any content here, but we will be able to change
 that by accessing the same area with a WebDAV client.
 
\end_layout

\begin_layout Subsubsection
WebDAV Client Test
\end_layout

\begin_layout Standard
There are many WebDAV clients and support for WebDAV access is baked into
 many popular file managers.
\end_layout

\begin_layout Standard
For simplicity's sake, we will use an easy command-line WebDAV client called
 "cadaver" in this guide.
\end_layout

\begin_layout Standard
Preferably from another droplet or Linux machine, install cadaver from the
 default repositories:
\end_layout

\begin_layout Verbatim
sudo apt-get install cadaver
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Now, let's create a file that we will upload to the WebDAV directory:
\end_layout

\begin_layout Verbatim
cd ~ 
\end_layout

\begin_layout Verbatim
touch testfile
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Next, we will connect using the same location we used to access from the
 browser:
\end_layout

\begin_layout Verbatim
cadaver http://your_IP_address_or_domain/webdav
\end_layout

\begin_layout Verbatim

\end_layout

\begin_layout Verbatim
Authentication required for webdav on server `162.243.2.14': 
\end_layout

\begin_layout Verbatim
Username:
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
You must type the "http://" portion for cadaver to find your server correctly.
 We will need to authenticate again, and then we will be dropped into a
 command-line interface.
\end_layout

\begin_layout Verbatim
dav:/webdav/>
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
From here, we can operate the client and host at the same time using commands
 that are similar to regular Linux commands.
\end_layout

\begin_layout Standard
To list the contents of the server directory, type:
\end_layout

\begin_layout Verbatim
ls
\end_layout

\begin_layout Verbatim

\end_layout

\begin_layout Verbatim
Listing collection `/webdav/': collection is empty.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
The directory is empty.
 Let's change that uploading our test file:
\end_layout

\begin_layout Verbatim
put testfile
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
We can try the list command again and see the file is now on the server:
\end_layout

\begin_layout Verbatim
ls
\end_layout

\begin_layout Verbatim

\end_layout

\begin_layout Verbatim
Listing collection `/webdav/': succeeded.
 
\end_layout

\begin_layout Verbatim
	testfile 0 Sep 20 19:36
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
We can make a directory and change into it by typing:
\end_layout

\begin_layout Verbatim
mkdir hello 
\end_layout

\begin_layout Verbatim
cd hello
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
We can then create a file by typing:
\end_layout

\begin_layout Verbatim
edit file.html
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
We can insert whatever content we want:
\end_layout

\begin_layout Verbatim
<h1>Hi!!!</h1>
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
When we are finished, we can type exit to close the connection:
\end_layout

\begin_layout Verbatim
exit
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Now, if we go back to our web browser, the changes that we have made are
 visible:
\end_layout

\begin_layout Verbatim
your_IP_address_or_domain/webdav
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/WebDAV_content.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
WebDAV content
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Conclusion
\end_layout

\begin_layout Standard
You should now have a WebDAV directory complete with basic authentication.
 If your directory contains content that absolutely must be kept secure,
 you might want to implement an SSL solution on top of the password authenticati
on.
 
\end_layout

\begin_layout Standard
Many file managers and clients exist that can seamlessly access and modify
 WebDAV content as if it were additional local storage.
 WebDAV allows for a much more dynamic HTTP experience than is traditionally
 possible.
\end_layout

\begin_layout Subsection
DPMbox integration
\end_layout

\begin_layout Standard
You can download last DPMbox version from its code repository address
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "11_valencia_calvellido_2015"

\end_inset

.
 
\end_layout

\begin_layout Standard
To use it on an Apache environment, extract the DPMbox distribution on your
 server and access through your browser to the existing index.html.
 Before testing on your local context, or if you are using DPMbox to connect
 to an external DPM server, please assign the values on config.js file properly.
 
\end_layout

\begin_layout Standard
The server value must be filled with something like 'http://lxfsra04a04.cern.ch'
 or 'localhost' and the root parameter (the directory at where the interface
 will start to read WebDAV content) should be set to anything like '/dpm/cern.ch/
home/dteam/aalvarez/public/' or '/webdav/' (trailing backslash needed).
\end_layout

\begin_layout Subsection
Cross-Origin Resource Sharing (CORS) policy
\end_layout

\begin_layout Standard
If you are testing DPMbox with a WebDAV server located beyond your own machine,
 please read this section carefully to make DPMbox work properly.
\end_layout

\begin_layout Standard
In the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{DPM}
\end_layout

\end_inset

 architecture one entity handles the namespace with the metadata, and other
 ones store the files with the actual data.
 This means that any request must go through a server hosting the namespace
 first, and then redirect to the disk node storing the physical file.
 We execute a PUT call and the file won’t be yet uploaded but DPM will answer
 back, then our web application has to try a second time.
 The URL needed to actually do the PUT would look like this, you can see
 the specific DPM node where the file will be uploaded, including a token
 validating the transaction:
\end_layout

\begin_layout Verbatim
http://lxfsra04a04.cern.ch/srv/dpm/01/nogroup/2015-03-02/XHR.js.zip.2900489
\end_layout

\begin_layout Verbatim
.0?sfn=%2Fdpm%2Fcern.ch%2Fhome%2Fdteam%2Faalvarez%2Fpublic%2Fcollection_d
\end_layout

\begin_layout Verbatim
%2FXHR.js.zip&dpmtoken=dbf5fcbe-7c31-4849-aa57-b07c6b474f5e&token=ojkU%2
\end_layout

\begin_layout Verbatim
FdgyPqTYEvu4TfZAyueVDqQ%3D%401425288602%401
\end_layout

\begin_layout Standard
User agents commonly apply same-origin restrictions to network requests.
 These restrictions prevent a client-side Web application as DPMbox running
 from one origin from obtaining data retrieved from another origin, and
 also limit unsafe HTTP requests that can be automatically launched toward
 destinations that differ from the running application’s origin.
 In user agents that follow this pattern, network requests typically include
 user credentials with cross-origin requests, including HTTP authentication
 and cookie information.
 As DPMbox relies heavily on 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 calls this has to be handled carefully or you’ll face a lot of error messages
 like this:
\end_layout

\begin_layout Verbatim
Cross-Origin Request Blocked: The Same Origin Policy disallows reading the
 
\end_layout

\begin_layout Verbatim
remote resource at http://lxfsra04a04.cern.ch/dpm/cern.ch/home/dteam/aalvarez/
\end_layout

\begin_layout Verbatim
public/test5.file.
 (Reason: CORS header 'Access-Control-Allow-Origin' missing).
\end_layout

\begin_layout Standard
You can check a bit of history of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{XHR}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CORS}
\end_layout

\end_inset

 and why this is happening on
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "1_cruz_2015"

\end_inset

.
\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ac{CORS}
\end_layout

\end_inset

 headers response configuration for an Apache WebDAV server that gets connection
s from DPMbox must look like
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:CORSconfig"

\end_inset

.
\end_layout

\begin_layout Verse
\begin_inset listings
lstparams "float,basicstyle={\footnotesize\ttfamily},columns=fullflexible"
inline false
status open

\begin_layout Description

Access-Control-Allow-Origin: UrlWhereDPMboxIsHosted.host 
\end_layout

\begin_layout Description

Access-Control-Allow-Credentials: true 
\end_layout

\begin_layout Description

Access-Control-Allow-Methods: ACL, CANCELUPLOAD, CHECKIN, CHECKOUT, COPY,
 DELETE, GET, HEAD, LOCK, MKCALENDAR, MKCOL, MOVE, OPTIONS, POST, PROPFIND,
 PROPPATCH, PUT, REPORT, SEARCH, UNCHECKOUT, UNLOCK, UPDATE, VERSION-CONTROL
 
\end_layout

\begin_layout Description

Access-Control-Allow-Headers: Authorization, Overwrite, Destination, Content-Typ
e, Depth, User-Agent, Translate, Range, Content-Range, Timeout, X-File-Size,
 X-Requested-With, Accept, Accept-Version, If-Modified-Since, X-File-Name,
 Cache-Control, Location, Lock-Token, If, X-No-Redirect 
\end_layout

\begin_layout Description

Access-Control-Expose-Headers: DAV, content-length, Allow, Location
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Access-Control Configuration
\begin_inset CommandInset label
LatexCommand label
name "lis:CORSconfig"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Extending DPMbox
\end_layout

\begin_layout Standard
Once the DPM or WebDAV server is up and running you can start playing with
 DPMbox.
 As you have seen DPMbox works basically through three files: 
\end_layout

\begin_layout Description
dpmbox-ui.js User interface code
\end_layout

\begin_layout Description
jquery.dpm.js Server interaction code
\end_layout

\begin_layout Description
jquery.dpmFilters.js Filters to adapt the server response information 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
You can find more information about the content and organization of these
 files in the section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sec:System-design"

\end_inset

.
 
\end_layout

\begin_layout Standard
Be careful when changing the context if you are developing on local and
 deploying over some external server.
 Also, as the interface is based on an external library, please read its
 documentation and follow its developer recommendations and advices
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "8_w2ui_2015"

\end_inset

.
\end_layout

\begin_layout Standard
And you are all set, happy coding!
\end_layout

\begin_layout Chapter
User manual
\begin_inset CommandInset label
LatexCommand label
name "chap:User-manual"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
textflush}{flushepinormal}
\backslash
setlength
\backslash
epigraphwidth{.6
\backslash
textwidth}
\backslash
setlength
\backslash
afterepigraphskip{2
\backslash
baselineskip}
\backslash
setlength{
\backslash
epigraphrule}{0pt}
\backslash
epigraphhead[40]{
\backslash
epigraph{
\backslash
emph{``Any product that needs a manual to work is broken.''}}{--- Elon Musk,
 
\backslash
emph{founder of Paypal, SpaceX or Tesla}~
\backslash
cite{1_musk_2015}}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Based on the words of Elon Musk, one of the main design goals in DPMbox
 was to make this user manual unnecessary.
 Even so, here it is in case someone thinks DPMbox is 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
broken
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The Disk Pool Manager (DPM) is a lightweight grid storage component, allowing
 access to data using commonly used grid protocols.
 DPMbox is its new web-based interface developed in JavaScript.
 Its look and feel is similar to desktop file explorers, so you won’t spend
 lots of time to adapt to its behaviour.
\end_layout

\begin_layout Standard
You can perform various operations with application data including (multiple)
 file upload, (multiple) file download, (multiple) delete of files and collectio
ns.
 Besides that you can also perform searches based on various file properties
 inside a directory and sort the content by those same properties.
\end_layout

\begin_layout Standard
Its panels are slightly responsive for a fast adjustment to your screen,
 and besides that, it has a flexible layout, that you can adapt to suit
 your needs.
\end_layout

\begin_layout Standard
An overview of the main interface is attached, please check
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:dpmbox_functionality"

\end_inset

.
\end_layout

\begin_layout Section
Functionality
\end_layout

\begin_layout Standard
DPMbox functionality include:
\end_layout

\begin_layout Itemize
Collections exploring and navigation
\end_layout

\begin_layout Itemize
Collections creation and deletion
\end_layout

\begin_layout Itemize
Files download, including massive download
\end_layout

\begin_layout Itemize
Files upload, including massive upload
\end_layout

\begin_layout Itemize
Files removing
\end_layout

\begin_layout Itemize
Filter and/or order the content inside a collection
\end_layout

\begin_layout Itemize
Search inside a collection
\end_layout

\begin_layout Itemize
Get metalinks
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:dpmbox_functionality"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/DPMbox-screenshot_comments.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DPMbox main functionality
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Requirements
\end_layout

\begin_layout Standard
In order to use DPMbox on your system, the DPM server must be updated to
 at least 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
lcgdm-dav
\end_layout

\end_inset

 version 0.16.
 If you are unsure about this, please ask your Disk Pool Manager administrator
 about this.
\end_layout

\begin_layout Standard
Besides that, the requirements are reduced to the web browser version you
 are using.
 It is strictly recommended that you use an updated browser, specifically
 DPMbox will work on (not restricted to):
\end_layout

\begin_layout Itemize
Google Chrome/Chromium, any version higher than v17
\end_layout

\begin_layout Itemize
Mozilla Firefox, starting on version 7
\end_layout

\begin_layout Itemize
Apple Safari, a more recent version than release 5
\end_layout

\begin_layout Itemize
Microsoft Internet Explorer, version 9 onwards
\end_layout

\begin_layout Section
How to use DPMbox
\end_layout

\begin_layout Standard
Just write the location of the DPM server that you would like to access.
 If the server is already updated you will be presented in your browser
 with a brand new interface that will look like the one in figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dpmbox_functionality"

\end_inset

.
\end_layout

\begin_layout Standard
If, for any reason, you have problems using DPMbox a switchback link has
 been added to get back to the old and plain WebDAV interface.
 It will be located on the left down corner of your browser, a small caption
 of text like in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:oldinterface_link"

\end_inset

.
 Every other new access will remember your interface choice (if you have
 cookies activated on your browser), though you can at any time change again
 to DPMbox and viceversa.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{centering}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:oldinterface_link"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{centering}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
How to use - Old interface link
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A folder icon on the left panel set on white indicates that the directory
 hasn't been yet read, so it could have more children or not.
 Clicking on the directory name will read the collection information from
 the server, presenting you the files contained on the center panel, and
 expanding the directory tree if there are children inside that route.
 When a directory is read, a + or a − icon are added to the left of the
 collection name, by them you can expand and collapse the tree hanging from
 that node.
\end_layout

\begin_layout Standard
Yoy can see a visual representation of the main functionalities in the figures
 attached: navigation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:howto-navigation"

\end_inset

, files uploading
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:howto-uploading"

\end_inset

, create and delete collections
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:howto-collections"

\end_inset

, filtering and searching
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:howto-searching"

\end_inset

 and sorting
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:howto-sorting"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:howto-navigation"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_1.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_3.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_4.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_5.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
How to use - Navigation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:howto-uploading"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_6.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_7.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
How to use - Uploading
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:howto-collections"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_11.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_12.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_13.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_14.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
How to use - Create and delete collection
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:howto-searching"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_15.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_16.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_17.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_18.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
How to use - Filtering and searching
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:howto-sorting"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/howtouse_19.png
	width 50text%

\end_inset


\begin_inset Graphics
	filename img/howtouse_20.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
How to use - Sorting
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "references"
options "splncs03"

\end_inset


\end_layout

\begin_layout Addchap
GNU Free Documentation License
\begin_inset CommandInset label
LatexCommand label
name "chap:GNU-Free-Documentation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

       Version 1.3, 3 November 2008
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

Copyright 
\backslash
copyright{} 2000, 2001, 2002, 2007, 2008  Free Software Foundation, Inc.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
bigskip
\backslash
texttt{<http://fsf.org/>}
\backslash
bigskip
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Everyone is permitted to copy and distribute verbatim copies  of this license
 document, but changing it is not allowed.
 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
bf
\backslash
large Preamble} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

The purpose of this License is to make a manual, textbook, or other functional
 and useful document ``free'' in the sense of freedom: to assure everyone
 the effective freedom to copy and redistribute it, with or without modifying
 it, either commercially or noncommercially.
 Secondarily, this License preserves for the author and publisher a way
 to get credit for their work, while not being considered responsible for
 modifications made by others.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

This License is a kind of ``copyleft'', which means that derivative works
 of the document must themselves be free in the same sense.
  It complements the GNU General Public License, which is a copyleft license
 designed for free software.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

We have designed this License in order to use it for manuals for free software,
 because free software needs free documentation: a free program should come
 with manuals providing the same freedoms that the software does.
  But this License is not limited to software manuals; it can be used for
 any textual work, regardless of subject matter or whether it is published
 as a printed book.
  We recommend this License principally for works whose purpose is instruction
 or reference.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 1.
 APPLICABILITY AND DEFINITIONS
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{1.
 APPLICABILITY AND DEFINITIONS} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

This License applies to any manual or other work, in any medium, that contains
 a notice placed by the copyright holder saying it can be distributed under
 the terms of this License.
  Such a notice grants a world-wide, royalty-free license, unlimited in
 duration, to use that work under the conditions stated herein.
  The ``
\backslash
textbf{Document}'', below, refers to any such manual or work.
  Any member of the public is a licensee, and is addressed as ``
\backslash
textbf{you}''.
  You accept the license if you copy, modify or distribute the work in a
 way requiring permission under copyright law.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

A ``
\backslash
textbf{Modified Version}'' of the Document means any work containing the
 Document or a portion of it, either copied verbatim, or with modifications
 and/or translated into another language.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

A ``
\backslash
textbf{Secondary Section}'' is a named appendix or a front-matter section
 of the Document that deals exclusively with the relationship of the publishers
 or authors of the Document to the Document's overall subject (or to related
 matters) and contains nothing that could fall directly within that overall
 subject.
  (Thus, if the Document is in part a textbook of mathematics, a Secondary
 Section may not explain any mathematics.)  The relationship could be a matter
 of historical connection with the subject or with related matters, or of
 legal, commercial, philosophical, ethical or political position regarding
 them.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The ``
\backslash
textbf{Invariant Sections}'' are certain Secondary Sections whose titles
 are designated, as being those of Invariant Sections, in the notice that
 says that the Document is released under this License.
  If a section does not fit the above definition of Secondary then it is
 not allowed to be designated as Invariant.
  The Document may contain zero Invariant Sections.
  If the Document does not identify any Invariant Sections then there are
 none.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The ``
\backslash
textbf{Cover Texts}'' are certain short passages of text that are listed,
 as Front-Cover Texts or Back-Cover Texts, in the notice that says that
 the Document is released under this License.
  A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be
 at most 25 words.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

A ``
\backslash
textbf{Transparent}'' copy of the Document means a machine-readable copy,
 represented in a format whose specification is available to the general
 public, that is suitable for revising the document straightforwardly with
 generic text editors or (for images composed of pixels) generic paint programs
 or (for drawings) some widely available drawing editor, and that is suitable
 for input to text formatters or for automatic translation to a variety
 of formats suitable for input to text formatters.
  A copy made in an otherwise Transparent file format whose markup, or absence
 of markup, has been arranged to thwart or discourage subsequent modification
 by readers is not Transparent.
 An image format is not Transparent if used for any substantial amount of
 text.
  A copy that is not ``Transparent'' is called ``
\backslash
textbf{Opaque}''.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Examples of suitable formats for Transparent copies include plain ASCII
 without markup, Texinfo input format, LaTeX input format, SGML or XML using
 a publicly available DTD, and standard-conforming simple HTML, PostScript
 or PDF designed for human modification.
  Examples of transparent image formats include PNG, XCF and JPG.
  Opaque formats include proprietary formats that can be read and edited
 only by proprietary word processors, SGML or XML for which the DTD and/or
 processing tools are not generally available, and the machine-generated
 HTML, PostScript or PDF produced by some word processors for output purposes
 only.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The ``
\backslash
textbf{Title Page}'' means, for a printed book, the title page itself, plus
 such following pages as are needed to hold, legibly, the material this
 License requires to appear in the title page.
  For works in formats which do not have any title page as such, ``Title
 Page'' means the text near the most prominent appearance of the work's
 title, preceding the beginning of the body of the text.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The ``
\backslash
textbf{publisher}'' means any person or entity that distributes copies of
 the Document to the public.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

A section ``
\backslash
textbf{Entitled XYZ}'' means a named subunit of the Document whose title
 either is precisely XYZ or contains XYZ in parentheses following text that
 translates XYZ in another language.
  (Here XYZ stands for a specific section name mentioned below, such as
 ``
\backslash
textbf{Acknowledgements}'', ``
\backslash
textbf{Dedications}'', ``
\backslash
textbf{Endorsements}'', or ``
\backslash
textbf{History}''.)   To ``
\backslash
textbf{Preserve the Title}'' of such a section when you modify the Document
 means that it remains a section ``Entitled XYZ'' according to this definition.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The Document may include Warranty Disclaimers next to the notice which states
 that this License applies to the Document.
  These Warranty Disclaimers are considered to be included by reference
 in this License, but only as regards disclaiming warranties: any other
 implication that these Warranty Disclaimers may have is void and has no
 effect on the meaning of this License.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 2.
 VERBATIM COPYING
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{2.
 VERBATIM COPYING} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

You may copy and distribute the Document in any medium, either commercially
 or noncommercially, provided that this License, the copyright notices,
 and the license notice saying this License applies to the Document are
 reproduced in all copies, and that you add no other conditions whatsoever
 to those of this License.
  You may not use technical measures to obstruct or control the reading
 or further copying of the copies you make or distribute.
  However, you may accept compensation in exchange for copies.
  If you distribute a large enough number of copies you must also follow
 the conditions in section~3.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

You may also lend copies, under the same conditions stated above, and you
 may publicly display copies.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 3.
 COPYING IN QUANTITY
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{3.
 COPYING IN QUANTITY} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

If you publish printed copies (or copies in media that commonly have printed
 covers) of the Document, numbering more than 100, and the Document's license
 notice requires Cover Texts, you must enclose the copies in covers that
 carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on
 the front cover, and Back-Cover Texts on the back cover.
  Both covers must also clearly and legibly identify you as the publisher
 of these copies.
  The front cover must present the full title with all words of the title
 equally prominent and visible.
  You may add other material on the covers in addition.
 Copying with changes limited to the covers, as long as they preserve the
 title of the Document and satisfy these conditions, can be treated as verbatim
 copying in other respects.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If the required texts for either cover are too voluminous to fit legibly,
 you should put the first ones listed (as many as fit reasonably) on the
 actual cover, and continue the rest onto adjacent pages.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If you publish or distribute Opaque copies of the Document numbering more
 than 100, you must either include a machine-readable Transparent copy along
 with each Opaque copy, or state in or with each Opaque copy a computer-network
 location from which the general network-using public has access to download
 using public-standard network protocols a complete Transparent copy of
 the Document, free of added material.
 If you use the latter option, you must take reasonably prudent steps, when
 you begin distribution of Opaque copies in quantity, to ensure that this
 Transparent copy will remain thus accessible at the stated location until
 at least one year after the last time you distribute an Opaque copy (directly
 or through your agents or retailers) of that edition to the public.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

It is requested, but not required, that you contact the authors of the Document
 well before redistributing any large number of copies, to give them a chance
 to provide you with an updated version of the Document.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 4.
 MODIFICATIONS
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{4.
 MODIFICATIONS} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

You may copy and distribute a Modified Version of the Document under the
 conditions of sections 2 and 3 above, provided that you release the Modified
 Version under precisely this License, with the Modified Version filling
 the role of the Document, thus licensing distribution and modification
 of the Modified Version to whoever possesses a copy of it.
  In addition, you must do these things in the Modified Version:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{itemize} 
\backslash
item[A.]     Use in the Title Page (and on the covers, if any) a title distinct
    from that of the Document, and from those of previous versions    (which
 should, if there were any, be listed in the History section    of the Document).
  You may use the same title as a previous version    if the original publisher
 of that version gives permission.
     
\backslash
item[B.]    List on the Title Page, as authors, one or more persons or entities
    responsible for authorship of the modifications in the Modified    Version,
 together with at least five of the principal authors of the    Document
 (all of its principal authors, if it has fewer than five),    unless they
 release you from this requirement.
     
\backslash
item[C.]    State on the Title page the name of the publisher of the    Modified
 Version, as the publisher.
     
\backslash
item[D.]    Preserve all the copyright notices of the Document.
     
\backslash
item[E.]    Add an appropriate copyright notice for your modifications  
  adjacent to the other copyright notices.
     
\backslash
item[F.]    Include, immediately after the copyright notices, a license notice
    giving the public permission to use the Modified Version under the 
   terms of this License, in the form shown in the Addendum below.
     
\backslash
item[G.]    Preserve in that license notice the full lists of Invariant Sections
    and required Cover Texts given in the Document's license notice.
     
\backslash
item[H.]    Include an unaltered copy of this License.
     
\backslash
item[I.]    Preserve the section Entitled ``History'', Preserve its Title,
 and add    to it an item stating at least the title, year, new authors,
 and    publisher of the Modified Version as given on the Title Page.
  If    there is no section Entitled ``History'' in the Document, create
 one    stating the title, year, authors, and publisher of the Document
 as    given on its Title Page, then add an item describing the Modified
    Version as stated in the previous sentence.
     
\backslash
item[J.]    Preserve the network location, if any, given in the Document
 for    public access to a Transparent copy of the Document, and likewise
    the network locations given in the Document for previous versions  
  it was based on.
  These may be placed in the ``History'' section.
    You may omit a network location for a work that was published at   
 least four years before the Document itself, or if the original    publisher
 of the version it refers to gives permission.
     
\backslash
item[K.]    For any section Entitled ``Acknowledgements'' or ``Dedications'',
    Preserve the Title of the section, and preserve in the section all 
   the substance and tone of each of the contributor acknowledgements  
  and/or dedications given therein.
     
\backslash
item[L.]    Preserve all the Invariant Sections of the Document,    unaltered
 in their text and in their titles.
  Section numbers    or the equivalent are not considered part of the section
 titles.
     
\backslash
item[M.]    Delete any section Entitled ``Endorsements''.
  Such a section    may not be included in the Modified Version.
     
\backslash
item[N.]    Do not retitle any existing section to be Entitled ``Endorsements''
    or to conflict in title with any Invariant Section.
     
\backslash
item[O.]    Preserve any Warranty Disclaimers.
 
\backslash
end{itemize}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If the Modified Version includes new front-matter sections or appendices
 that qualify as Secondary Sections and contain no material copied from
 the Document, you may at your option designate some or all of these sections
 as invariant.
  To do this, add their titles to the list of Invariant Sections in the
 Modified Version's license notice.
 These titles must be distinct from any other section titles.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

You may add a section Entitled ``Endorsements'', provided it contains nothing
 but endorsements of your Modified Version by various parties---for example,
 statements of peer review or that the text has been approved by an organization
 as the authoritative definition of a standard.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

You may add a passage of up to five words as a Front-Cover Text, and a passage
 of up to 25 words as a Back-Cover Text, to the end of the list of Cover
 Texts in the Modified Version.
  Only one passage of Front-Cover Text and one of Back-Cover Text may be
 added by (or through arrangements made by) any one entity.
  If the Document already includes a cover text for the same cover, previously
 added by you or by arrangement made by the same entity you are acting on
 behalf of, you may not add another; but you may replace the old one, on
 explicit permission from the previous publisher that added the old one.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The author(s) and publisher(s) of the Document do not by this License give
 permission to use their names for publicity for or to assert or imply endorseme
nt of any Modified Version.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 5.
 COMBINING DOCUMENTS
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{5.
 COMBINING DOCUMENTS} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

You may combine the Document with other documents released under this License,
 under the terms defined in section~4 above for modified versions, provided
 that you include in the combination all of the Invariant Sections of all
 of the original documents, unmodified, and list them all as Invariant Sections
 of your combined work in its license notice, and that you preserve all
 their Warranty Disclaimers.
\end_layout

\begin_layout Plain Layout

The combined work need only contain one copy of this License, and multiple
 identical Invariant Sections may be replaced with a single copy.
  If there are multiple Invariant Sections with the same name but different
 contents, make the title of each such section unique by adding at the end
 of it, in parentheses, the name of the original author or publisher of
 that section if known, or else a unique number.
 Make the same adjustment to the section titles in the list of Invariant
 Sections in the license notice of the combined work.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

In the combination, you must combine any sections Entitled ``History'' in
 the various original documents, forming one section Entitled ``History'';
 likewise combine any sections Entitled ``Acknowledgements'', and any sections
 Entitled ``Dedications''.
  You must delete all sections Entitled ``Endorsements''.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 6.
 COLLECTIONS OF DOCUMENTS
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{6.
 COLLECTIONS OF DOCUMENTS} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

You may make a collection consisting of the Document and other documents
 released under this License, and replace the individual copies of this
 License in the various documents with a single copy that is included in
 the collection, provided that you follow the rules of this License for
 verbatim copying of each of the documents in all other respects.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

You may extract a single document from such a collection, and distribute
 it individually under this License, provided you insert a copy of this
 License into the extracted document, and follow this License in all other
 respects regarding verbatim copying of that document.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 7.
 AGGREGATION WITH INDEPENDENT WORKS
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{7.
 AGGREGATION WITH INDEPENDENT WORKS} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

A compilation of the Document or its derivatives with other separate and
 independent documents or works, in or on a volume of a storage or distribution
 medium, is called an ``aggregate'' if the copyright resulting from the
 compilation is not used to limit the legal rights of the compilation's
 users beyond what the individual works permit.
 When the Document is included in an aggregate, this License does not apply
 to the other works in the aggregate which are not themselves derivative
 works of the Document.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If the Cover Text requirement of section~3 is applicable to these copies
 of the Document, then if the Document is less than one half of the entire
 aggregate, the Document's Cover Texts may be placed on covers that bracket
 the Document within the aggregate, or the electronic equivalent of covers
 if the Document is in electronic form.
 Otherwise they must appear on printed covers that bracket the whole aggregate.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 8.
 TRANSLATION
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{8.
 TRANSLATION} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

Translation is considered a kind of modification, so you may distribute
 translations of the Document under the terms of section~4.
 Replacing Invariant Sections with translations requires special permission
 from their copyright holders, but you may include translations of some
 or all Invariant Sections in addition to the original versions of these
 Invariant Sections.
  You may include a translation of this License, and all the license notices
 in the Document, and any Warranty Disclaimers, provided that you also include
 the original English version of this License and the original versions
 of those notices and disclaimers.
  In case of a disagreement between the translation and the original version
 of this License or a notice or disclaimer, the original version will prevail.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If a section in the Document is Entitled ``Acknowledgements'', ``Dedications'',
 or ``History'', the requirement (section~4) to Preserve its Title (section~1)
 will typically require changing the actual title.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 9.
 TERMINATION
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{9.
 TERMINATION} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

You may not copy, modify, sublicense, or distribute the Document except
 as expressly provided under this License.
  Any attempt otherwise to copy, modify, sublicense, or distribute it is
 void, and will automatically terminate your rights under this License.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

However, if you cease all violation of this License, then your license from
 a particular copyright holder is reinstated (a) provisionally, unless and
 until the copyright holder explicitly and finally terminates your license,
 and (b) permanently, if the copyright holder fails to notify you of the
 violation by some reasonable means prior to 60 days after the cessation.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Moreover, your license from a particular copyright holder is reinstated
 permanently if the copyright holder notifies you of the violation by some
 reasonable means, this is the first time you have received notice of violation
 of this License (for any work) from that copyright holder, and you cure
 the violation prior to 30 days after your receipt of the notice.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Termination of your rights under this section does not terminate the licenses
 of parties who have received copies or rights from you under this License.
  If your rights have been terminated and not permanently reinstated, receipt
 of a copy of some or all of the same material does not give you any rights
 to use it.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 10.
 FUTURE REVISIONS OF THIS LICENSE
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{10.
 FUTURE REVISIONS OF THIS LICENSE} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

The Free Software Foundation may publish new, revised versions of the GNU
 Free Documentation License from time to time.
  Such new versions will be similar in spirit to the present version, but
 may differ in detail to address new problems or concerns.
  See 
\backslash
texttt{http://www.gnu.org/copyleft/}.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Each version of the License is given a distinguishing version number.
 If the Document specifies that a particular numbered version of this License
 ``or any later version'' applies to it, you have the option of following
 the terms and conditions either of that specified version or of any later
 version that has been published (not as a draft) by the Free Software Foundatio
n.
  If the Document does not specify a version number of this License, you
 may choose any version ever published (not as a draft) by the Free Software
 Foundation.
  If the Document specifies that a proxy can decide which future versions
 of this License can be used, that proxy's public statement of acceptance
 of a version permanently authorizes you to choose that version for the
 Document.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf 11.
 RELICENSING
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{11.
 RELICENSING} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

``Massive Multiauthor Collaboration Site'' (or ``MMC Site'') means any World
 Wide Web server that publishes copyrightable works and also provides prominent
 facilities for anybody to edit those works.
  A public wiki that anybody can edit is an example of such a server.
  A ``Massive Multiauthor Collaboration'' (or ``MMC'') contained in the
 site means any set of copyrightable works thus published on the MMC site.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

``CC-BY-SA'' means the Creative Commons Attribution-Share Alike 3.0 license
 published by Creative Commons Corporation, a not-for-profit corporation
 with a principal place of business in San Francisco, California, as well
 as future copyleft versions of that license published by that same organization.
\end_layout

\begin_layout Plain Layout

``Incorporate'' means to publish or republish a Document, in whole or in
 part, as part of another Document.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

An MMC is ``eligible for relicensing'' if it is licensed under this License,
 and if all works that were first published under this License somewhere
 other than this MMC, and subsequently incorporated in whole or in part
 into the MMC, (1) had no cover texts or invariant sections, and (2) were
 thus incorporated prior to November 1, 2008.
\end_layout

\begin_layout Plain Layout

The operator of an MMC Site may republish an MMC contained in the site under
 CC-BY-SA on the same site at any time before August 1, 2009, provided the
 MMC is eligible for relicensing.
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} {
\backslash
Large
\backslash
bf ADDENDUM: How to use this License for your documents
\backslash
par} 
\backslash
phantomsection 
\backslash
addcontentsline{toc}{section}{ADDENDUM: How to use this License for your
 documents} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

To use this License in a document you have written, include a copy of the
 License in the document and put the following copyright and license notices
 just after the title page:
\end_layout

\begin_layout Plain Layout


\backslash
bigskip 
\backslash
begin{quote}     Copyright 
\backslash
copyright{}  YEAR  YOUR NAME.
     Permission is granted to copy, distribute and/or modify this document
     under the terms of the GNU Free Documentation License, Version 1.3 
    or any later version published by the Free Software Foundation;    
 with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
     A copy of the license is included in the section entitled ``GNU   
  Free Documentation License''.
 
\backslash
end{quote} 
\backslash
bigskip      If you have Invariant Sections, Front-Cover Texts and Back-Cover
 Texts, replace the ``with 
\backslash
dots
\backslash
 Texts.''
\backslash
 line with this:
\end_layout

\begin_layout Plain Layout


\backslash
bigskip 
\backslash
begin{quote}     with the Invariant Sections being LIST THEIR TITLES, with
 the     Front-Cover Texts being LIST, and with the Back-Cover Texts being
 LIST.
 
\backslash
end{quote} 
\backslash
bigskip      If you have Invariant Sections without Cover Texts, or some
 other combination of the three, merge those two alternatives to suit the
 situation.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

If your document contains nontrivial examples of program code, we recommend
 releasing these examples in parallel under your choice of free software
 license, such as the GNU General Public License, to permit their use in
 free software.
\end_layout

\begin_layout Plain Layout

%---------------------------------------------------------------------
\end_layout

\end_inset


\end_layout

\end_body
\end_document
